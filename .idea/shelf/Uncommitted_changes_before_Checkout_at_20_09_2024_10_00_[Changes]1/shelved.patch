Index: src/main/java/controller/VarausController.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package controller;\r\n\r\nimport java.time.LocalDate;\r\nimport java.util.ArrayList;\r\nimport java.util.List;\r\n\r\nimport app.MockData;\r\nimport model.enteties.Asiakas;\r\nimport model.enteties.Huone;\r\nimport model.enteties.Varaus;\r\n\r\npublic class VarausController {\r\n\r\n    public void luoVaraus(Huone huone, Asiakas asiakas, LocalDate alkuPvm, LocalDate loppuPvm) {\r\n        if (huone == null || asiakas == null || alkuPvm == null || loppuPvm == null) {\r\n            System.out.println(\"Invalid reservation data\");\r\n            return;\r\n        }\r\n\r\n        if (alkuPvm.isAfter(loppuPvm)) {\r\n            System.out.println(\"Invalid reservation dates\");\r\n            return;\r\n        }\r\n\r\n        Varaus varaus = new Varaus(huone, asiakas, alkuPvm, loppuPvm);\r\n\r\n        MockData.addReservation(varaus); // Lisätään varaus tietokantaan\r\n\r\n        huone.setHuone_tila(\"Varattu\");\r\n\r\n        // Debug: Print confirmation of reservation\r\n        // System.out.println(\"Reservation created for Room: \" + huone.getHuoneNro() + \" from \" + alkuPvm + \" to \" + loppuPvm);\r\n    }\r\n\r\n    public void peruVaraus(Varaus varaus) {\r\n        if (varaus == null) {\r\n            System.out.println(\"Invalid reservation data\");\r\n            return;\r\n        }\r\n\r\n        MockData.getMockReservations().remove(varaus); // Poistetaan varaus tietokannasta\r\n\r\n        varaus.getHuone().setHuone_tila(\"Vapaa\");\r\n\r\n        // Debug: Print confirmation of cancellation\r\n        // System.out.println(\"Reservation cancelled for Room: \" + varaus.getHuone().getHuoneNro() + \" from \" + varaus.getAlkuPvm() + \" to \" + varaus.getLoppuPvm());\r\n    }\r\n\r\n    public void muokkaaVarausta(Varaus varaus, Huone uusiHuone, LocalDate alkuPvm, LocalDate loppuPvm){\r\n        if (varaus == null || alkuPvm == null || loppuPvm == null) {\r\n            System.out.println(\"Invalid reservation data\");\r\n            return;\r\n        }\r\n\r\n        if (alkuPvm.isAfter(loppuPvm)) {\r\n            System.out.println(\"Invalid reservation dates\");\r\n            return;\r\n        }\r\n\r\n        varaus.getHuone().setHuone_tila(\"Vapaa\");\r\n        varaus.setHuone(uusiHuone);\r\n        varaus.setAlkuPvm(alkuPvm);\r\n        varaus.setLoppuPvm(loppuPvm);\r\n        varaus.getHuone().setHuone_tila(\"Varattu\");\r\n    }\r\n\r\n    public List<Huone> vapaatHuoneet(LocalDate alkuPvm, LocalDate loppuPvm) {\r\n        List<Huone> huoneet = MockData.getMockRooms();  // Haetaan kaikki huoneet Tietokannasta\r\n        List<Huone> vapaatHuoneet = new ArrayList<>();\r\n\r\n        if (huoneet != null) {\r\n            for (Huone huone : huoneet) {\r\n                if (huoneVapaa(huone, alkuPvm, loppuPvm)) {\r\n                    vapaatHuoneet.add(huone);\r\n                }\r\n            }\r\n        }\r\n        return vapaatHuoneet;\r\n    }\r\n\r\n    public boolean huoneVapaa(Huone huone, LocalDate alkuPvm, LocalDate loppuPvm) {\r\n        List<Varaus> varaukset = MockData.getMockReservations();  // Haetaan kaikki varaukset Tietokannasta\r\n\r\n        if (varaukset != null) {\r\n            for (Varaus varaus : varaukset) {\r\n                if (alkuPvm.isBefore(varaus.getLoppuPvm()) && loppuPvm.isAfter(varaus.getAlkuPvm().minusDays(1))){\r\n                    if (varaus.getHuone().getHuone_nro() == huone.getHuone_nro()) {\r\n                        return false;\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        return true;\r\n    }\r\n\r\n}
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/main/java/controller/VarausController.java b/src/main/java/controller/VarausController.java
--- a/src/main/java/controller/VarausController.java	
+++ b/src/main/java/controller/VarausController.java	
@@ -4,13 +4,12 @@
 import java.util.ArrayList;
 import java.util.List;
 
-import app.MockData;
 import model.enteties.Asiakas;
 import model.enteties.Huone;
 import model.enteties.Varaus;
 
 public class VarausController {
-
+/*
     public void luoVaraus(Huone huone, Asiakas asiakas, LocalDate alkuPvm, LocalDate loppuPvm) {
         if (huone == null || asiakas == null || alkuPvm == null || loppuPvm == null) {
             System.out.println("Invalid reservation data");
@@ -22,9 +21,11 @@
             return;
         }
 
-        Varaus varaus = new Varaus(huone, asiakas, alkuPvm, loppuPvm);
+
 
-        MockData.addReservation(varaus); // Lisätään varaus tietokantaan
+        //Varaus varaus = new Varaus(alkuPvm, loppuPvm, asiakas, huone);
+
+        //MockData.addReservation(varaus); // Lisätään varaus tietokantaan
 
         huone.setHuone_tila("Varattu");
 
@@ -38,9 +39,9 @@
             return;
         }
 
-        MockData.getMockReservations().remove(varaus); // Poistetaan varaus tietokannasta
+        //MockData.getMockReservations().remove(varaus); // Poistetaan varaus tietokannasta
 
-        varaus.getHuone().setHuone_tila("Vapaa");
+        //varaus.getHuone().setHuone_tila("Vapaa");
 
         // Debug: Print confirmation of cancellation
         // System.out.println("Reservation cancelled for Room: " + varaus.getHuone().getHuoneNro() + " from " + varaus.getAlkuPvm() + " to " + varaus.getLoppuPvm());
@@ -57,11 +58,11 @@
             return;
         }
 
-        varaus.getHuone().setHuone_tila("Vapaa");
-        varaus.setHuone(uusiHuone);
+        //varaus.getHuone().setHuone_tila("Vapaa");
+        //varaus.setHuone(uusiHuone);
         varaus.setAlkuPvm(alkuPvm);
         varaus.setLoppuPvm(loppuPvm);
-        varaus.getHuone().setHuone_tila("Varattu");
+        //varaus.getHuone().setHuone_tila("Varattu");
     }
 
     public List<Huone> vapaatHuoneet(LocalDate alkuPvm, LocalDate loppuPvm) {
@@ -84,13 +85,15 @@
         if (varaukset != null) {
             for (Varaus varaus : varaukset) {
                 if (alkuPvm.isBefore(varaus.getLoppuPvm()) && loppuPvm.isAfter(varaus.getAlkuPvm().minusDays(1))){
-                    if (varaus.getHuone().getHuone_nro() == huone.getHuone_nro()) {
+                    //if (varaus.getHuone().getHuone_nro() == huone.getHuone_nro()) {
                         return false;
-                    }
+                    //}
                 }
             }
         }
         return true;
     }
+    
+ */
 
 }
\ No newline at end of file
Index: src/main/java/controller/HuoneController.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package controller;\r\n\r\nimport model.DAO.HuoneDAO;\r\nimport model.enteties.Huone;\r\nimport model.enteties.Hotelli;\r\nimport model.DAO.HotelliDAO;\r\n\r\npublic class HuoneController {\r\n    private HuoneDAO huoneDAO;\r\n    private HotelliDAO hotelliDAO;\r\n\r\n    public HuoneController() {\r\n        huoneDAO = new HuoneDAO();\r\n        hotelliDAO = new HotelliDAO();\r\n    }\r\n\r\n    public void lisaaHuone(int huone_nro, String huone_tyyppi, String huone_tila, double huone_hinta, int hotelli_id) {\r\n\r\n        // Tarkista, onko hotelli olemassa\r\n        Hotelli hotelli = hotelliDAO.findById(hotelli_id);\r\n        if (hotelli == null) {\r\n            System.out.println(\"Hotellia ei löytynyt ID:llä \" + hotelli_id);\r\n            return; // Lopetetaan toiminto, jos hotellia ei löydy\r\n        }\r\n\r\n        // Jos hotelli löytyy, lisätään huone\r\n        Huone huone = new Huone(0, huone_nro, huone_tyyppi, huone_tila, huone_hinta, hotelli_id);\r\n        huoneDAO.persist(huone);\r\n        System.out.println(\"Huone lisätty onnistuneesti hotelliin ID:llä \" + hotelli_id);\r\n    }\r\n\r\n    public void FindHuoneetByHoteliId(int hotelli_id) {\r\n        huoneDAO.haeHuoneetByHotelliId(hotelli_id);\r\n    }\r\n\r\n    public void findHuoneById(int id) {\r\n        huoneDAO.findByRoomId(id);\r\n    }\r\n\r\n    public Huone findHuoneByTila(String huone_tila) {\r\n        return huoneDAO.findByHuoneTila(huone_tila);\r\n    }\r\n\r\n    public Huone findHuoneByTyyppi(String huone_tyyppi) {\r\n        return huoneDAO.findByTyyppi(huone_tyyppi);\r\n    }\r\n\r\n    public void updateHuoneById(int id, int huone_nro, String huone_tyyppi, String huone_tila, double huone_hinta) {\r\n        huoneDAO.updateHuoneById(id, huone_nro, huone_tyyppi, huone_tila, huone_hinta);\r\n    }\r\n\r\n\r\n    public void deleteHuone(int id) {\r\n        huoneDAO.removeById(id);\r\n    }\r\n\r\n}\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/main/java/controller/HuoneController.java b/src/main/java/controller/HuoneController.java
--- a/src/main/java/controller/HuoneController.java	
+++ b/src/main/java/controller/HuoneController.java	
@@ -1,17 +1,24 @@
 package controller;
 
 import model.DAO.HuoneDAO;
+import model.DAO.VarausDAO;
 import model.enteties.Huone;
 import model.enteties.Hotelli;
 import model.DAO.HotelliDAO;
+import model.enteties.Varaus;
+
+import java.time.LocalDate;
+import java.util.List;
 
 public class HuoneController {
     private HuoneDAO huoneDAO;
     private HotelliDAO hotelliDAO;
+    private VarausDAO varausDAO;
 
     public HuoneController() {
         huoneDAO = new HuoneDAO();
         hotelliDAO = new HotelliDAO();
+        varausDAO = new VarausDAO();
     }
 
     public void lisaaHuone(int huone_nro, String huone_tyyppi, String huone_tila, double huone_hinta, int hotelli_id) {
@@ -29,8 +36,9 @@
         System.out.println("Huone lisätty onnistuneesti hotelliin ID:llä " + hotelli_id);
     }
 
-    public void FindHuoneetByHoteliId(int hotelli_id) {
-        huoneDAO.haeHuoneetByHotelliId(hotelli_id);
+    public List<Huone> FindHuoneetByHoteliId(int hotelli_id) {
+        List<Huone> huoneet = huoneDAO.haeHuoneetByHotelliId(hotelli_id);
+        return huoneet;
     }
 
     public void findHuoneById(int id) {
@@ -49,9 +57,24 @@
         huoneDAO.updateHuoneById(id, huone_nro, huone_tyyppi, huone_tila, huone_hinta);
     }
 
-
     public void deleteHuone(int id) {
         huoneDAO.removeById(id);
     }
 
+    public List<Huone> findVapaatHuoneetByHotelliId(int hotelli_id, LocalDate alkuPvm, LocalDate loppuPvm) {
+        List<Huone> huoneet = huoneDAO.haeHuoneetByHotelliId(hotelli_id);
+        List<Varaus> varaukset = (List<Varaus>) varausDAO.haeVaraukset();
+
+        for (Varaus varaus : varaukset) {
+            if (alkuPvm.isBefore(varaus.getLoppuPvm()) && loppuPvm.isAfter(varaus.getAlkuPvm().minusDays(1))) {
+                for (Huone huone : huoneet) {
+                    if (huone.getHuone_id() == varaus.getHuoneId()) {
+                        huoneet.remove(huone);
+                    }
+                }
+            }
+        }
+        return huoneet;
+    }
+
 }
Index: src/main/java/app/MainPetra.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package app;\r\n\r\nimport controller.VarausController;\r\nimport model.enteties.Asiakas;\r\nimport model.enteties.Huone;\r\nimport model.enteties.Varaus;\r\nimport org.checkerframework.checker.units.qual.A;\r\n\r\nimport java.time.LocalDate;\r\nimport java.util.List;\r\n\r\npublic class MainPetra {\r\n    public static void main(String[] args) {\r\n\r\n        // Fetch mock users, rooms, and reservations\r\n        List<Asiakas> users = MockData.getMockUsers();\r\n        List<Huone> rooms = MockData.getMockRooms();\r\n\r\n        /*\r\n        System.out.println(\"Users:\");\r\n        for (Asiakas user : users) {\r\n            System.out.println(user.getEtunimi() + \" \" + user.getSukunimi());\r\n        }\r\n\r\n        System.out.println(\"\\nRooms:\");\r\n        for (Huone room : rooms) {\r\n            System.out.println(room.getHuoneNro() + \" | \" + room.getHinta() + \" | \" + room.getHuoneenTyyppi());\r\n        }\r\n\r\n         */\r\n\r\n        // Test the reservation system\r\n        VarausController controller = new VarausController();\r\n        Asiakas john = users.get(0);\r\n        Huone room1 = rooms.get(0);\r\n\r\n        Asiakas jane = users.get(1);\r\n        Huone room2 = rooms.get(3);\r\n\r\n        Asiakas john2 = users.get(2);\r\n\r\n        // Display available rooms before creating the reservation\r\n        System.out.println(\"\\nAvailable Rooms (before reservation):\");\r\n        List<Huone> availableRooms = controller.vapaatHuoneet(LocalDate.of(2024, 9, 10), LocalDate.of(2024, 9, 15));\r\n        for (Huone availableRoom : availableRooms) {\r\n            System.out.println(\"Room \" + availableRoom.getHuone_nro() + \" (\" + availableRoom.getHuone_tyyppi() + \")\");\r\n        }\r\n\r\n        // Create a reservation\r\n        controller.luoVaraus(room1, john, LocalDate.of(2024, 9, 10), LocalDate.of(2024, 9, 15));\r\n\r\n        List<Varaus> reservations = MockData.getMockReservations();\r\n        System.out.println(\"\\nReservations:\");\r\n        for (Varaus varaus : reservations) {\r\n            System.out.println(\"Room: \" + varaus.getHuone().getHuone_nro() + \" | User: \" + varaus.getAsiakas().getEtunimi() + \" | Dates: \" + varaus.getAlkuPvm() + \" to \" + varaus.getLoppuPvm());\r\n        }\r\n\r\n        controller.luoVaraus(room2, jane, LocalDate.of(2024, 9, 5), LocalDate.of(2024, 9, 10));\r\n\r\n        System.out.println(\"\\nReservations:\");\r\n        for (Varaus varaus : reservations) {\r\n            System.out.println(\"Room: \" + varaus.getHuone().getHuone_nro() + \" | User: \" + varaus.getAsiakas().getEtunimi() + \" | Dates: \" + varaus.getAlkuPvm() + \" to \" + varaus.getLoppuPvm());\r\n        }\r\n\r\n/*\r\n        // Display available rooms after creating the reservation\r\n        System.out.println(\"\\nAvailable Rooms (after reservation):\");\r\n        availableRooms = controller.vapaatHuoneet(LocalDate.of(2024, 9, 10), LocalDate.of(2024, 9, 15));\r\n        for (Huone availableRoom : availableRooms) {\r\n            System.out.println(\"Room \" + availableRoom.getHuone_nro() + \" (\" + availableRoom.getHuone_tyyppi() + \")\");\r\n        }\r\n\r\n\r\n\r\n        // Cancel a reservation\r\n        controller.peruVaraus(reservations.get(0));\r\n\r\n        System.out.println(\"\\nReservations:\");\r\n        for (Varaus varaus : reservations) {\r\n            System.out.println(\"Room: \" + varaus.getHuone().getHuoneNro() + \" | User: \" + varaus.getAsiakas().getEtunimi() + \" | Dates: \" + varaus.getAlkuPvm() + \" to \" + varaus.getLoppuPvm());\r\n        }\r\n\r\n        // Display available rooms after cancelling the reservation\r\n        System.out.println(\"\\nAvailable Rooms (after cancelling reservation):\");\r\n        availableRooms = controller.vapaatHuoneet(LocalDate.of(2024, 9, 10), LocalDate.of(2024, 9, 15));\r\n        for (Huone availableRoom : availableRooms) {\r\n            System.out.println(\"Room \" + availableRoom.getHuoneNro() + \" (\" + availableRoom.getHuoneenTyyppi() + \")\");\r\n        }\r\n\r\n        // Modify a reservation\r\n        controller.muokkaaVarausta(reservations.get(0), room1, LocalDate.of(2024, 9, 6), LocalDate.of(2024, 9, 10));\r\n\r\n        System.out.println(\"\\nReservations:\");\r\n        for (Varaus varaus : reservations) {\r\n            System.out.println(\"Room: \" + varaus.getHuone().getHuoneNro() + \" | User: \" + varaus.getAsiakas().getEtunimi() + \" | Dates: \" + varaus.getAlkuPvm() + \" to \" + varaus.getLoppuPvm());\r\n        }\r\n\r\n        // Display available rooms after modifying the reservation\r\n        System.out.println(\"\\nAvailable Rooms (after modifying reservation):\");\r\n        availableRooms = controller.vapaatHuoneet(LocalDate.of(2024, 9, 5), LocalDate.of(2024, 9, 12));\r\n        for (Huone availableRoom : availableRooms) {\r\n            System.out.println(\"Room \" + availableRoom.getHuoneNro() + \" (\" + availableRoom.getHuoneenTyyppi() + \")\");\r\n        }\r\n\r\n         */\r\n    }\r\n\r\n}\r\n\r\n\r\n\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/main/java/app/MainPetra.java b/src/main/java/app/MainPetra.java
--- a/src/main/java/app/MainPetra.java	
+++ b/src/main/java/app/MainPetra.java	
@@ -1,5 +1,6 @@
 package app;
 
+import controller.HuoneController;
 import controller.VarausController;
 import model.enteties.Asiakas;
 import model.enteties.Huone;
@@ -12,97 +13,14 @@
 public class MainPetra {
     public static void main(String[] args) {
 
-        // Fetch mock users, rooms, and reservations
-        List<Asiakas> users = MockData.getMockUsers();
-        List<Huone> rooms = MockData.getMockRooms();
-
-        /*
-        System.out.println("Users:");
-        for (Asiakas user : users) {
-            System.out.println(user.getEtunimi() + " " + user.getSukunimi());
-        }
-
-        System.out.println("\nRooms:");
-        for (Huone room : rooms) {
-            System.out.println(room.getHuoneNro() + " | " + room.getHinta() + " | " + room.getHuoneenTyyppi());
-        }
-
-         */
-
-        // Test the reservation system
-        VarausController controller = new VarausController();
-        Asiakas john = users.get(0);
-        Huone room1 = rooms.get(0);
-
-        Asiakas jane = users.get(1);
-        Huone room2 = rooms.get(3);
+        // Testataan vapaiden huoneiden haku
+        HuoneController huoneController = new HuoneController();
 
-        Asiakas john2 = users.get(2);
-
-        // Display available rooms before creating the reservation
-        System.out.println("\nAvailable Rooms (before reservation):");
-        List<Huone> availableRooms = controller.vapaatHuoneet(LocalDate.of(2024, 9, 10), LocalDate.of(2024, 9, 15));
-        for (Huone availableRoom : availableRooms) {
-            System.out.println("Room " + availableRoom.getHuone_nro() + " (" + availableRoom.getHuone_tyyppi() + ")");
+        List<Huone> huoneet = huoneController.findVapaatHuoneetByHotelliId(1, LocalDate.of(2021, 12, 1), LocalDate.of(2021, 12, 10));
+        System.out.println("Vapaat huoneet:");
+        for (Huone huone : huoneet) {
+            System.out.println("Huoneen numero: " + huone.getHuone_nro());
         }
-
-        // Create a reservation
-        controller.luoVaraus(room1, john, LocalDate.of(2024, 9, 10), LocalDate.of(2024, 9, 15));
-
-        List<Varaus> reservations = MockData.getMockReservations();
-        System.out.println("\nReservations:");
-        for (Varaus varaus : reservations) {
-            System.out.println("Room: " + varaus.getHuone().getHuone_nro() + " | User: " + varaus.getAsiakas().getEtunimi() + " | Dates: " + varaus.getAlkuPvm() + " to " + varaus.getLoppuPvm());
-        }
-
-        controller.luoVaraus(room2, jane, LocalDate.of(2024, 9, 5), LocalDate.of(2024, 9, 10));
-
-        System.out.println("\nReservations:");
-        for (Varaus varaus : reservations) {
-            System.out.println("Room: " + varaus.getHuone().getHuone_nro() + " | User: " + varaus.getAsiakas().getEtunimi() + " | Dates: " + varaus.getAlkuPvm() + " to " + varaus.getLoppuPvm());
-        }
-
-/*
-        // Display available rooms after creating the reservation
-        System.out.println("\nAvailable Rooms (after reservation):");
-        availableRooms = controller.vapaatHuoneet(LocalDate.of(2024, 9, 10), LocalDate.of(2024, 9, 15));
-        for (Huone availableRoom : availableRooms) {
-            System.out.println("Room " + availableRoom.getHuone_nro() + " (" + availableRoom.getHuone_tyyppi() + ")");
-        }
-
-
-
-        // Cancel a reservation
-        controller.peruVaraus(reservations.get(0));
-
-        System.out.println("\nReservations:");
-        for (Varaus varaus : reservations) {
-            System.out.println("Room: " + varaus.getHuone().getHuoneNro() + " | User: " + varaus.getAsiakas().getEtunimi() + " | Dates: " + varaus.getAlkuPvm() + " to " + varaus.getLoppuPvm());
-        }
-
-        // Display available rooms after cancelling the reservation
-        System.out.println("\nAvailable Rooms (after cancelling reservation):");
-        availableRooms = controller.vapaatHuoneet(LocalDate.of(2024, 9, 10), LocalDate.of(2024, 9, 15));
-        for (Huone availableRoom : availableRooms) {
-            System.out.println("Room " + availableRoom.getHuoneNro() + " (" + availableRoom.getHuoneenTyyppi() + ")");
-        }
-
-        // Modify a reservation
-        controller.muokkaaVarausta(reservations.get(0), room1, LocalDate.of(2024, 9, 6), LocalDate.of(2024, 9, 10));
-
-        System.out.println("\nReservations:");
-        for (Varaus varaus : reservations) {
-            System.out.println("Room: " + varaus.getHuone().getHuoneNro() + " | User: " + varaus.getAsiakas().getEtunimi() + " | Dates: " + varaus.getAlkuPvm() + " to " + varaus.getLoppuPvm());
-        }
-
-        // Display available rooms after modifying the reservation
-        System.out.println("\nAvailable Rooms (after modifying reservation):");
-        availableRooms = controller.vapaatHuoneet(LocalDate.of(2024, 9, 5), LocalDate.of(2024, 9, 12));
-        for (Huone availableRoom : availableRooms) {
-            System.out.println("Room " + availableRoom.getHuoneNro() + " (" + availableRoom.getHuoneenTyyppi() + ")");
-        }
-
-         */
     }
 
 }
Index: .idea/shelf/Uncommitted_changes_before_Checkout_at_11_9_2024_10_00_[Changes]/shelved.patch
===================================================================
diff --git a/.idea/shelf/Uncommitted_changes_before_Checkout_at_11_9_2024_10_00_[Changes]/shelved.patch b/.idea/shelf/Uncommitted_changes_before_Checkout_at_11_9_2024_10_00_[Changes]/shelved.patch
deleted file mode 100644
--- a/.idea/shelf/Uncommitted_changes_before_Checkout_at_11_9_2024_10_00_[Changes]/shelved.patch	
+++ /dev/null	
@@ -1,96 +0,0 @@
-Index: src/main/resources/META-INF/persistence.xml
-IDEA additional info:
-Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
-<+><?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"yes\"?>\r\n<persistence xmlns=\"https://jakarta.ee/xml/ns/persistence\"\r\n             xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\r\n             version=\"3.0\"\r\n             xsi:schemaLocation=\"https://jakarta.ee/xml/ns/persistence https://jakarta.ee/xml/ns/persistence/persistence_3_0.xsd\">\r\n    <persistence-unit name=\"hotelli_db\" transaction-type=\"RESOURCE_LOCAL\">\r\n        <provider>org.hibernate.jpa.HibernatePersistenceProvider</provider>\r\n        <properties>\r\n            <property name=\"jakarta.persistence.jdbc.url\" value=\"jdbc:mariadb://localhost:3306/hotelli_db\"/>\r\n            <property name=\"jakarta.persistence.jdbc.user\" value=\"root\"/>\r\n            <property name=\"jakarta.persistence.jdbc.password\" value=\"root\"/>\r\n            <property name=\"jakarta.persistence.jdbc.driver\" value=\"org.mariadb.jdbc.Driver\"/>\r\n            <property name=\"jakarta.persistence.schema-generation.database.action\" value=\"none\"/>\r\n            <property name=\"jakarta.persistence.sql-dialect\" value=\"org.hibernate.dialect.MariaDBDialect\"/>\r\n            <property name=\"hibernate.show_sql\" value=\"true\" />\r\n        </properties>\r\n    </persistence-unit>\r\n</persistence>
-Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
-<+>UTF-8
-===================================================================
-diff --git a/src/main/resources/META-INF/persistence.xml b/src/main/resources/META-INF/persistence.xml
---- a/src/main/resources/META-INF/persistence.xml	(revision 60885854456d66983dbeb8749632a10d6ca48274)
-+++ b/src/main/resources/META-INF/persistence.xml	(date 1725951182638)
-@@ -8,7 +8,7 @@
-         <properties>
-             <property name="jakarta.persistence.jdbc.url" value="jdbc:mariadb://localhost:3306/hotelli_db"/>
-             <property name="jakarta.persistence.jdbc.user" value="root"/>
--            <property name="jakarta.persistence.jdbc.password" value="root"/>
-+            <property name="jakarta.persistence.jdbc.password" value="assiponi"/>
-             <property name="jakarta.persistence.jdbc.driver" value="org.mariadb.jdbc.Driver"/>
-             <property name="jakarta.persistence.schema-generation.database.action" value="none"/>
-             <property name="jakarta.persistence.sql-dialect" value="org.hibernate.dialect.MariaDBDialect"/>
-Index: src/target/classes/META-INF/persistence.xml
-IDEA additional info:
-Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
-<+><?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"yes\"?>\r\n<persistence xmlns=\"https://jakarta.ee/xml/ns/persistence\"\r\n             xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\r\n             version=\"3.0\"\r\n             xsi:schemaLocation=\"https://jakarta.ee/xml/ns/persistence https://jakarta.ee/xml/ns/persistence/persistence_3_0.xsd\">\r\n    <persistence-unit name=\"hotelli_db\" transaction-type=\"RESOURCE_LOCAL\">\r\n        <provider>org.hibernate.jpa.HibernatePersistenceProvider</provider>\r\n        <properties>\r\n            <property name=\"jakarta.persistence.jdbc.url\" value=\"jdbc:mariadb://localhost:3306/hotelli_db\"/>\r\n            <property name=\"jakarta.persistence.jdbc.user\" value=\"root\"/>\r\n            <property name=\"jakarta.persistence.jdbc.password\" value=\"root\"/>\r\n            <property name=\"jakarta.persistence.jdbc.driver\" value=\"org.mariadb.jdbc.Driver\"/>\r\n            <property name=\"jakarta.persistence.schema-generation.database.action\" value=\"none\"/>\r\n            <property name=\"jakarta.persistence.sql-dialect\" value=\"org.hibernate.dialect.MariaDBDialect\"/>\r\n            <property name=\"hibernate.show_sql\" value=\"true\" />\r\n        </properties>\r\n    </persistence-unit>\r\n</persistence>
-Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
-<+>UTF-8
-===================================================================
-diff --git a/src/target/classes/META-INF/persistence.xml b/src/target/classes/META-INF/persistence.xml
---- a/src/target/classes/META-INF/persistence.xml	(revision 60885854456d66983dbeb8749632a10d6ca48274)
-+++ b/src/target/classes/META-INF/persistence.xml	(date 1725951182638)
-@@ -8,7 +8,7 @@
-         <properties>
-             <property name="jakarta.persistence.jdbc.url" value="jdbc:mariadb://localhost:3306/hotelli_db"/>
-             <property name="jakarta.persistence.jdbc.user" value="root"/>
--            <property name="jakarta.persistence.jdbc.password" value="root"/>
-+            <property name="jakarta.persistence.jdbc.password" value="assiponi"/>
-             <property name="jakarta.persistence.jdbc.driver" value="org.mariadb.jdbc.Driver"/>
-             <property name="jakarta.persistence.schema-generation.database.action" value="none"/>
-             <property name="jakarta.persistence.sql-dialect" value="org.hibernate.dialect.MariaDBDialect"/>
-Index: .idea/workspace.xml
-IDEA additional info:
-Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
-<+><?xml version=\"1.0\" encoding=\"UTF-8\"?>\r\n<project version=\"4\">\r\n  <component name=\"AutoImportSettings\">\r\n    <option name=\"autoReloadType\" value=\"SELECTIVE\" />\r\n  </component>\r\n  <component name=\"ChangeListManager\">\r\n    <list default=\"true\" id=\"065e434f-b050-4145-bce8-5768651a9a60\" name=\"Changes\" comment=\"github testi\">\r\n      <change beforePath=\"$PROJECT_DIR$/.gitIgnore\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/.gitIgnore\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/.idea/dataSources.local.xml\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/.idea/dataSources.local.xml\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/.idea/workspace.xml\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/.idea/workspace.xml\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/src/gui.iml\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/src/gui.iml\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/src/main/resources/META-INF/persistence.xml\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/src/main/resources/META-INF/persistence.xml\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/src/target/classes/META-INF/persistence.xml\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/src/target/classes/META-INF/persistence.xml\" afterDir=\"false\" />\r\n    </list>\r\n    <option name=\"SHOW_DIALOG\" value=\"false\" />\r\n    <option name=\"HIGHLIGHT_CONFLICTS\" value=\"true\" />\r\n    <option name=\"HIGHLIGHT_NON_ACTIVE_CHANGELIST\" value=\"false\" />\r\n    <option name=\"LAST_RESOLUTION\" value=\"IGNORE\" />\r\n  </component>\r\n  <component name=\"FileTemplateManagerImpl\">\r\n    <option name=\"RECENT_TEMPLATES\">\r\n      <list>\r\n        <option value=\"Class\" />\r\n        <option value=\"CSS File\" />\r\n      </list>\r\n    </option>\r\n  </component>\r\n  <component name=\"Git.Settings\">\r\n    <option name=\"RECENT_BRANCH_BY_REPOSITORY\">\r\n      <map>\r\n        <entry key=\"$PROJECT_DIR$\" value=\"main\" />\r\n      </map>\r\n    </option>\r\n    <option name=\"RECENT_GIT_ROOT_PATH\" value=\"$PROJECT_DIR$\" />\r\n  </component>\r\n  <component name=\"GitHubPullRequestSearchHistory\">{\r\n  &quot;lastFilter&quot;: {\r\n    &quot;state&quot;: &quot;OPEN&quot;,\r\n    &quot;assignee&quot;: &quot;annagaom&quot;\r\n  }\r\n}</component>\r\n  <component name=\"GithubPullRequestsUISettings\">{\r\n  &quot;selectedUrlAndAccountId&quot;: {\r\n    &quot;url&quot;: &quot;https://github.com/PetraHauk/OhtuProjekti.git&quot;,\r\n    &quot;accountId&quot;: &quot;d12f10a6-d5cf-492d-aceb-5d1198a70491&quot;\r\n  }\r\n}</component>\r\n  <component name=\"MarkdownSettingsMigration\">\r\n    <option name=\"stateVersion\" value=\"1\" />\r\n  </component>\r\n  <component name=\"ProblemsViewState\">\r\n    <option name=\"selectedTabId\" value=\"CurrentFile\" />\r\n  </component>\r\n  <component name=\"ProjectColorInfo\">{\r\n  &quot;associatedIndex&quot;: 3\r\n}</component>\r\n  <component name=\"ProjectId\" id=\"2leYgd5LUOn8ijdYfmOTF1ggQv2\" />\r\n  <component name=\"ProjectLevelVcsManager\" settingsEditedManually=\"true\" />\r\n  <component name=\"ProjectViewState\">\r\n    <option name=\"hideEmptyMiddlePackages\" value=\"true\" />\r\n    <option name=\"showLibraryContents\" value=\"true\" />\r\n  </component>\r\n  <component name=\"PropertiesComponent\"><![CDATA[{\r\n  \"keyToString\": {\r\n    \"Application.AnnaMain.executor\": \"Run\",\r\n    \"Application.Main.executor\": \"Run\",\r\n    \"Application.MainPetra.executor\": \"Run\",\r\n    \"Application.OhjelmistoGUI.executor\": \"Run\",\r\n    \"Application.WilmaMain.executor\": \"Run\",\r\n    \"Downloaded.Files.Path.Enabled\": \"false\",\r\n    \"Repository.Attach.Annotations\": \"false\",\r\n    \"Repository.Attach.JavaDocs\": \"false\",\r\n    \"Repository.Attach.Sources\": \"false\",\r\n    \"RunOnceActivity.OpenProjectViewOnStart\": \"true\",\r\n    \"RunOnceActivity.ShowReadmeOnStart\": \"true\",\r\n    \"git-widget-placeholder\": \"wilma\",\r\n    \"kotlin-language-version-configured\": \"true\",\r\n    \"list.type.of.created.stylesheet\": \"CSS\",\r\n    \"node.js.detected.package.eslint\": \"true\",\r\n    \"node.js.detected.package.tslint\": \"true\",\r\n    \"node.js.selected.package.eslint\": \"(autodetect)\",\r\n    \"node.js.selected.package.tslint\": \"(autodetect)\",\r\n    \"nodejs_package_manager_path\": \"npm\",\r\n    \"project.structure.last.edited\": \"Modules\",\r\n    \"project.structure.proportion\": \"0.15\",\r\n    \"project.structure.side.proportion\": \"0.5482759\",\r\n    \"settings.editor.selected.configurable\": \"reference.settings.project.maven.repository.indices\",\r\n    \"vue.rearranger.settings.migration\": \"true\"\r\n  },\r\n  \"keyToStringList\": {\r\n    \"DatabaseDriversLRU\": [\r\n      \"mariadb\"\r\n    ]\r\n  }\r\n}]]></component>\r\n  <component name=\"RecentsManager\">\r\n    <key name=\"CreateClassDialog.RecentsKey\">\r\n      <recent name=\"model.enteties\" />\r\n    </key>\r\n  </component>\r\n  <component name=\"RunManager\">\r\n    <configuration name=\"AnnaMain\" type=\"Application\" factoryName=\"Application\" temporary=\"true\" nameIsGenerated=\"true\">\r\n      <option name=\"MAIN_CLASS_NAME\" value=\"app.AnnaMain\" />\r\n      <module name=\"gui\" />\r\n      <extension name=\"coverage\">\r\n        <pattern>\r\n          <option name=\"PATTERN\" value=\"app.*\" />\r\n          <option name=\"ENABLED\" value=\"true\" />\r\n        </pattern>\r\n      </extension>\r\n      <method v=\"2\">\r\n        <option name=\"Make\" enabled=\"true\" />\r\n      </method>\r\n    </configuration>\r\n    <configuration name=\"Main\" type=\"Application\" factoryName=\"Application\" temporary=\"true\" nameIsGenerated=\"true\">\r\n      <option name=\"MAIN_CLASS_NAME\" value=\"app.Main\" />\r\n      <module name=\"gui\" />\r\n      <extension name=\"coverage\">\r\n        <pattern>\r\n          <option name=\"PATTERN\" value=\"app.*\" />\r\n          <option name=\"ENABLED\" value=\"true\" />\r\n        </pattern>\r\n      </extension>\r\n      <method v=\"2\">\r\n        <option name=\"Make\" enabled=\"true\" />\r\n      </method>\r\n    </configuration>\r\n    <configuration name=\"MainPetra\" type=\"Application\" factoryName=\"Application\" temporary=\"true\" nameIsGenerated=\"true\">\r\n      <option name=\"MAIN_CLASS_NAME\" value=\"app.MainPetra\" />\r\n      <module name=\"gui\" />\r\n      <extension name=\"coverage\">\r\n        <pattern>\r\n          <option name=\"PATTERN\" value=\"app.*\" />\r\n          <option name=\"ENABLED\" value=\"true\" />\r\n        </pattern>\r\n      </extension>\r\n      <method v=\"2\">\r\n        <option name=\"Make\" enabled=\"true\" />\r\n      </method>\r\n    </configuration>\r\n    <recent_temporary>\r\n      <list>\r\n        <item itemvalue=\"Application.AnnaMain\" />\r\n        <item itemvalue=\"Application.MainPetra\" />\r\n        <item itemvalue=\"Application.Main\" />\r\n      </list>\r\n    </recent_temporary>\r\n  </component>\r\n  <component name=\"SharedIndexes\">\r\n    <attachedChunks>\r\n      <set>\r\n        <option value=\"jdk-21.0.2-openjdk-21.0.2-f644763e9732-c0c073db\" />\r\n      </set>\r\n    </attachedChunks>\r\n  </component>\r\n  <component name=\"SpellCheckerSettings\" RuntimeDictionaries=\"0\" Folders=\"0\" CustomDictionaries=\"0\" DefaultDictionary=\"application-level\" UseSingleDictionary=\"true\" transferred=\"true\" />\r\n  <component name=\"TaskManager\">\r\n    <task active=\"true\" id=\"Default\" summary=\"Default task\">\r\n      <changelist id=\"065e434f-b050-4145-bce8-5768651a9a60\" name=\"Changes\" comment=\"\" />\r\n      <created>1725542122228</created>\r\n      <option name=\"number\" value=\"Default\" />\r\n      <option name=\"presentableId\" value=\"Default\" />\r\n      <updated>1725542122228</updated>\r\n      <workItem from=\"1725542123275\" duration=\"69610000\" />\r\n      <workItem from=\"1725951025272\" duration=\"6032000\" />\r\n    </task>\r\n    <task id=\"LOCAL-00001\" summary=\"päivistys\">\r\n      <option name=\"closed\" value=\"true\" />\r\n      <created>1725609857977</created>\r\n      <option name=\"number\" value=\"00001\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00001\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1725609857977</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00002\" summary=\"lisää sarakkeita tauluun\">\r\n      <option name=\"closed\" value=\"true\" />\r\n      <created>1725619749405</created>\r\n      <option name=\"number\" value=\"00002\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00002\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1725619749405</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00003\" summary=\"päivistys\">\r\n      <option name=\"closed\" value=\"true\" />\r\n      <created>1725619801233</created>\r\n      <option name=\"number\" value=\"00003\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00003\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1725619801233</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00004\" summary=\"kieli virheitä korjaus\">\r\n      <option name=\"closed\" value=\"true\" />\r\n      <created>1725620152801</created>\r\n      <option name=\"number\" value=\"00004\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00004\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1725620152801</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00005\" summary=\"korjaa kaikki hoteli -&gt; hotelli\">\r\n      <option name=\"closed\" value=\"true\" />\r\n      <created>1725624830732</created>\r\n      <option name=\"number\" value=\"00005\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00005\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1725624830732</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00006\" summary=\"kayttaja taulukko: lisää, haut, päivitä\">\r\n      <option name=\"closed\" value=\"true\" />\r\n      <created>1725633440958</created>\r\n      <option name=\"number\" value=\"00006\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00006\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1725633440958</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00007\" summary=\"kayttaja taulukko: vaihda salasana toimi\">\r\n      <option name=\"closed\" value=\"true\" />\r\n      <created>1725634791047</created>\r\n      <option name=\"number\" value=\"00007\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00007\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1725634791047</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00008\" summary=\"koodin siistiminen\">\r\n      <option name=\"closed\" value=\"true\" />\r\n      <created>1725651837984</created>\r\n      <option name=\"number\" value=\"00008\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00008\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1725651837984</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00009\" summary=\"huone taulu: javat\">\r\n      <option name=\"closed\" value=\"true\" />\r\n      <created>1725730939801</created>\r\n      <option name=\"number\" value=\"00009\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00009\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1725730939802</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00010\" summary=\"huone taulu: haut , poista ja päivitä\">\r\n      <option name=\"closed\" value=\"true\" />\r\n      <created>1725746477917</created>\r\n      <option name=\"number\" value=\"00010\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00010\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1725746477917</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00011\" summary=\"päivistys\">\r\n      <option name=\"closed\" value=\"true\" />\r\n      <created>1725746526899</created>\r\n      <option name=\"number\" value=\"00011\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00011\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1725746526899</updated>\r\n    </task>\r\n    <task id=\"LOCAL−00012\" summary=\"github testi\">\r\n      <option name=\"closed\" value=\"true\" />\r\n      <created>1725951128496</created>\r\n      <option name=\"number\" value=\"LOCAL−00012\" />\r\n      <option name=\"presentableId\" value=\"LOCAL−00012\" />\r\n      <updated>1725951128496</updated>\r\n    </task>\r\n    <option name=\"localTasksCounter\" value=\"13\" />\r\n    <servers />\r\n  </component>\r\n  <component name=\"TypeScriptGeneratedFilesManager\">\r\n    <option name=\"version\" value=\"3\" />\r\n  </component>\r\n  <component name=\"VcsManagerConfiguration\">\r\n    <MESSAGE value=\"lisää sarakkeita tauluun\" />\r\n    <MESSAGE value=\"kieli virheitä korjaus\" />\r\n    <MESSAGE value=\"korjaa kaikki hoteli -&gt; hotelli\" />\r\n    <MESSAGE value=\"kayttaja taulukko: lisää, haut, päivitä\" />\r\n    <MESSAGE value=\"kayttaja taulukko: vaihda salasana toimi\" />\r\n    <MESSAGE value=\"koodin siistiminen\" />\r\n    <MESSAGE value=\"huone taulu: javat\" />\r\n    <MESSAGE value=\"huone taulu: haut , poista ja päivitä\" />\r\n    <MESSAGE value=\"päivistys\" />\r\n    <MESSAGE value=\"github testi\" />\r\n    <option name=\"LAST_COMMIT_MESSAGE\" value=\"github testi\" />\r\n  </component>\r\n  <component name=\"XDebuggerManager\">\r\n    <breakpoint-manager>\r\n      <breakpoints>\r\n        <breakpoint type=\"java-exception\">\r\n          <properties class=\"java.lang.IllegalStateException\" package=\"java.lang\" />\r\n          <option name=\"timeStamp\" value=\"8\" />\r\n        </breakpoint>\r\n      </breakpoints>\r\n    </breakpoint-manager>\r\n  </component>\r\n</project>
-Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
-<+>UTF-8
-===================================================================
-diff --git a/.idea/workspace.xml b/.idea/workspace.xml
---- a/.idea/workspace.xml	(revision 60885854456d66983dbeb8749632a10d6ca48274)
-+++ b/.idea/workspace.xml	(date 1726037924090)
-@@ -4,11 +4,7 @@
-     <option name="autoReloadType" value="SELECTIVE" />
-   </component>
-   <component name="ChangeListManager">
--    <list default="true" id="065e434f-b050-4145-bce8-5768651a9a60" name="Changes" comment="github testi">
--      <change beforePath="$PROJECT_DIR$/.gitIgnore" beforeDir="false" afterPath="$PROJECT_DIR$/.gitIgnore" afterDir="false" />
--      <change beforePath="$PROJECT_DIR$/.idea/dataSources.local.xml" beforeDir="false" afterPath="$PROJECT_DIR$/.idea/dataSources.local.xml" afterDir="false" />
--      <change beforePath="$PROJECT_DIR$/.idea/workspace.xml" beforeDir="false" afterPath="$PROJECT_DIR$/.idea/workspace.xml" afterDir="false" />
--      <change beforePath="$PROJECT_DIR$/src/gui.iml" beforeDir="false" afterPath="$PROJECT_DIR$/src/gui.iml" afterDir="false" />
-+    <list default="true" id="065e434f-b050-4145-bce8-5768651a9a60" name="Changes" comment="Window opens and shows basic layout when WilmaMain is launched">
-       <change beforePath="$PROJECT_DIR$/src/main/resources/META-INF/persistence.xml" beforeDir="false" afterPath="$PROJECT_DIR$/src/main/resources/META-INF/persistence.xml" afterDir="false" />
-       <change beforePath="$PROJECT_DIR$/src/target/classes/META-INF/persistence.xml" beforeDir="false" afterPath="$PROJECT_DIR$/src/target/classes/META-INF/persistence.xml" afterDir="false" />
-     </list>
-@@ -162,7 +158,7 @@
-       <option name="presentableId" value="Default" />
-       <updated>1725542122228</updated>
-       <workItem from="1725542123275" duration="69610000" />
--      <workItem from="1725951025272" duration="6032000" />
-+      <workItem from="1725951025272" duration="6343000" />
-     </task>
-     <task id="LOCAL-00001" summary="päivistys">
-       <option name="closed" value="true" />
-@@ -259,7 +255,14 @@
-       <option name="presentableId" value="LOCAL−00012" />
-       <updated>1725951128496</updated>
-     </task>
--    <option name="localTasksCounter" value="13" />
-+    <task id="LOCAL−00013" summary="Window opens and shows basic layout when WilmaMain is launched">
-+      <option name="closed" value="true" />
-+      <created>1726037765848</created>
-+      <option name="number" value="LOCAL−00013" />
-+      <option name="presentableId" value="LOCAL−00013" />
-+      <updated>1726037765848</updated>
-+    </task>
-+    <option name="localTasksCounter" value="14" />
-     <servers />
-   </component>
-   <component name="TypeScriptGeneratedFilesManager">
-@@ -276,7 +279,8 @@
-     <MESSAGE value="huone taulu: haut , poista ja päivitä" />
-     <MESSAGE value="päivistys" />
-     <MESSAGE value="github testi" />
--    <option name="LAST_COMMIT_MESSAGE" value="github testi" />
-+    <MESSAGE value="Window opens and shows basic layout when WilmaMain is launched" />
-+    <option name="LAST_COMMIT_MESSAGE" value="Window opens and shows basic layout when WilmaMain is launched" />
-   </component>
-   <component name="XDebuggerManager">
-     <breakpoint-manager>
Index: .idea/workspace.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><?xml version=\"1.0\" encoding=\"UTF-8\"?>\r\n<project version=\"4\">\r\n  <component name=\"RunManager\">\r\n    <configuration name=\"AnnaMain\" type=\"Application\" factoryName=\"Application\" temporary=\"true\" nameIsGenerated=\"true\">\r\n      <option name=\"MAIN_CLASS_NAME\" value=\"app.AnnaMain\" />\r\n      <module name=\"gui\" />\r\n      <extension name=\"coverage\">\r\n        <pattern>\r\n          <option name=\"PATTERN\" value=\"app.*\" />\r\n          <option name=\"ENABLED\" value=\"true\" />\r\n        </pattern>\r\n      </extension>\r\n      <method v=\"2\">\r\n        <option name=\"Make\" enabled=\"true\" />\r\n      </method>\r\n    </configuration>\r\n    <configuration name=\"Main\" type=\"Application\" factoryName=\"Application\" temporary=\"true\" nameIsGenerated=\"true\">\r\n      <option name=\"MAIN_CLASS_NAME\" value=\"app.Main\" />\r\n      <module name=\"gui\" />\r\n      <extension name=\"coverage\">\r\n        <pattern>\r\n          <option name=\"PATTERN\" value=\"app.*\" />\r\n          <option name=\"ENABLED\" value=\"true\" />\r\n        </pattern>\r\n      </extension>\r\n      <method v=\"2\">\r\n        <option name=\"Make\" enabled=\"true\" />\r\n      </method>\r\n    </configuration>\r\n    <configuration name=\"MainPetra\" type=\"Application\" factoryName=\"Application\" temporary=\"true\" nameIsGenerated=\"true\">\r\n      <option name=\"MAIN_CLASS_NAME\" value=\"app.MainPetra\" />\r\n      <module name=\"gui\" />\r\n      <extension name=\"coverage\">\r\n        <pattern>\r\n          <option name=\"PATTERN\" value=\"app.*\" />\r\n          <option name=\"ENABLED\" value=\"true\" />\r\n        </pattern>\r\n      </extension>\r\n      <method v=\"2\">\r\n        <option name=\"Make\" enabled=\"true\" />\r\n      </method>\r\n    </configuration>\r\n    <recent_temporary>\r\n      <list>\r\n        <item itemvalue=\"Application.MainPetra\" />\r\n        <item itemvalue=\"Application.Main\" />\r\n        <item itemvalue=\"Application.AnnaMain\" />\r\n      </list>\r\n    </recent_temporary>\r\n  </component>\r\n</project>
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/.idea/workspace.xml b/.idea/workspace.xml
--- a/.idea/workspace.xml	
+++ b/.idea/workspace.xml	
@@ -1,6 +1,80 @@
 <?xml version="1.0" encoding="UTF-8"?>
 <project version="4">
-  <component name="RunManager">
+  <component name="AutoImportSettings">
+    <option name="autoReloadType" value="SELECTIVE" />
+  </component>
+  <component name="ChangeListManager">
+    <list default="true" id="7980e41e-5880-4600-8b82-580d154807da" name="Changes" comment="Target Commit 12/09">
+      <change beforePath="$PROJECT_DIR$/.gitIgnore" beforeDir="false" afterPath="$PROJECT_DIR$/.gitIgnore" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/.idea/copilot/chatSessions/00000000000.xd" beforeDir="false" />
+      <change beforePath="$PROJECT_DIR$/.idea/copilot/chatSessions/blobs/version" beforeDir="false" />
+      <change beforePath="$PROJECT_DIR$/.idea/dataSources.local.xml" beforeDir="false" afterPath="$PROJECT_DIR$/.idea/dataSources.local.xml" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/.idea/shelf/Uncommitted_changes_before_Checkout_at_11_9_2024_10_00_[Changes]/shelved.patch" beforeDir="false" />
+      <change beforePath="$PROJECT_DIR$/.idea/shelf/Uncommitted_changes_before_Checkout_at_11_9_2024_10_00__Changes_.xml" beforeDir="false" afterPath="$PROJECT_DIR$/.idea/shelf/Uncommitted_changes_before_Checkout_at_11_9_2024_10_00__Changes_.xml" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/.idea/workspace.xml" beforeDir="false" afterPath="$PROJECT_DIR$/.idea/workspace.xml" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/src/main/Database/hotelli_db" beforeDir="false" afterPath="$PROJECT_DIR$/src/main/Database/hotelli_db" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/src/main/java/app/HuoneHaku.java" beforeDir="false" afterPath="$PROJECT_DIR$/src/main/java/app/HuoneHaku.java" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/src/main/java/app/MainPetra.java" beforeDir="false" afterPath="$PROJECT_DIR$/src/main/java/app/MainPetra.java" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/src/main/java/app/MockData.java" beforeDir="false" afterPath="$PROJECT_DIR$/src/main/java/app/MockData.java" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/src/main/java/controller/HuoneController.java" beforeDir="false" afterPath="$PROJECT_DIR$/src/main/java/controller/HuoneController.java" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/src/main/java/controller/VarausController.java" beforeDir="false" afterPath="$PROJECT_DIR$/src/main/java/controller/VarausController.java" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/src/main/java/model/DAO/HuoneDAO.java" beforeDir="false" afterPath="$PROJECT_DIR$/src/main/java/model/DAO/HuoneDAO.java" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/src/main/java/model/DAO/LaskuDAO.java" beforeDir="false" afterPath="$PROJECT_DIR$/src/main/java/model/DAO/LaskuDAO.java" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/src/main/java/model/enteties/Lasku.java" beforeDir="false" afterPath="$PROJECT_DIR$/src/main/java/model/enteties/Lasku.java" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/src/main/resources/META-INF/persistence.xml" beforeDir="false" afterPath="$PROJECT_DIR$/src/main/resources/META-INF/persistence.xml" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/src/target/classes/app/HuoneHaku.class" beforeDir="false" afterPath="$PROJECT_DIR$/src/target/classes/app/HuoneHaku.class" afterDir="false" />
+    </list>
+    <option name="SHOW_DIALOG" value="false" />
+    <option name="HIGHLIGHT_CONFLICTS" value="true" />
+    <option name="HIGHLIGHT_NON_ACTIVE_CHANGELIST" value="false" />
+    <option name="LAST_RESOLUTION" value="IGNORE" />
+  </component>
+  <component name="FileTemplateManagerImpl">
+    <option name="RECENT_TEMPLATES">
+      <list>
+        <option value="Class" />
+      </list>
+    </option>
+  </component>
+  <component name="Git.Settings">
+    <option name="RECENT_BRANCH_BY_REPOSITORY">
+      <map>
+        <entry key="$PROJECT_DIR$" value="Petra" />
+      </map>
+    </option>
+    <option name="RECENT_GIT_ROOT_PATH" value="$PROJECT_DIR$" />
+  </component>
+  <component name="MarkdownSettingsMigration">
+    <option name="stateVersion" value="1" />
+  </component>
+  <component name="ProjectColorInfo">{
+  &quot;customColor&quot;: &quot;&quot;,
+  &quot;associatedIndex&quot;: 3
+}</component>
+  <component name="ProjectId" id="2mBhafV7DYNhhC4kMGHgV0B1QWy" />
+  <component name="ProjectLevelVcsManager" settingsEditedManually="true" />
+  <component name="ProjectViewState">
+    <option name="hideEmptyMiddlePackages" value="true" />
+    <option name="showLibraryContents" value="true" />
+  </component>
+  <component name="PropertiesComponent"><![CDATA[{
+  "keyToString": {
+    "Application.AnnaMain.executor": "Run",
+    "Application.MainPetra.executor": "Run",
+    "Application.WilmaMain.executor": "Run",
+    "RunOnceActivity.OpenProjectViewOnStart": "true",
+    "RunOnceActivity.ShowReadmeOnStart": "true",
+    "git-widget-placeholder": "main",
+    "kotlin-language-version-configured": "true",
+    "node.js.detected.package.eslint": "true",
+    "node.js.detected.package.tslint": "true",
+    "node.js.selected.package.eslint": "(autodetect)",
+    "node.js.selected.package.tslint": "(autodetect)",
+    "nodejs_package_manager_path": "npm",
+    "vue.rearranger.settings.migration": "true"
+  }
+}]]></component>
+  <component name="RunManager" selected="Application.MainPetra">
     <configuration name="AnnaMain" type="Application" factoryName="Application" temporary="true" nameIsGenerated="true">
       <option name="MAIN_CLASS_NAME" value="app.AnnaMain" />
       <module name="gui" />
@@ -29,6 +103,19 @@
     </configuration>
     <configuration name="MainPetra" type="Application" factoryName="Application" temporary="true" nameIsGenerated="true">
       <option name="MAIN_CLASS_NAME" value="app.MainPetra" />
+      <module name="gui" />
+      <extension name="coverage">
+        <pattern>
+          <option name="PATTERN" value="app.*" />
+          <option name="ENABLED" value="true" />
+        </pattern>
+      </extension>
+      <method v="2">
+        <option name="Make" enabled="true" />
+      </method>
+    </configuration>
+    <configuration name="WilmaMain" type="Application" factoryName="Application" temporary="true" nameIsGenerated="true">
+      <option name="MAIN_CLASS_NAME" value="app.WilmaMain" />
       <module name="gui" />
       <extension name="coverage">
         <pattern>
@@ -43,9 +130,39 @@
     <recent_temporary>
       <list>
         <item itemvalue="Application.MainPetra" />
-        <item itemvalue="Application.Main" />
         <item itemvalue="Application.AnnaMain" />
+        <item itemvalue="Application.WilmaMain" />
+        <item itemvalue="Application.Main" />
+        <item itemvalue="Application.WilmaMain" />
       </list>
     </recent_temporary>
   </component>
+  <component name="SharedIndexes">
+    <attachedChunks>
+      <set>
+        <option value="jdk-21.0.2-openjdk-21.0.2-f644763e9732-c0c073db" />
+      </set>
+    </attachedChunks>
+  </component>
+  <component name="SpellCheckerSettings" RuntimeDictionaries="0" Folders="0" CustomDictionaries="0" DefaultDictionary="application-level" UseSingleDictionary="true" transferred="true" />
+  <component name="TaskManager">
+    <task active="true" id="Default" summary="Default task">
+      <changelist id="7980e41e-5880-4600-8b82-580d154807da" name="Changes" comment="Target Commit 12/09" />
+      <created>1726555943695</created>
+      <option name="number" value="Default" />
+      <option name="presentableId" value="Default" />
+      <updated>1726555943695</updated>
+      <workItem from="1726555945937" duration="5150000" />
+      <workItem from="1726573363281" duration="22000" />
+      <workItem from="1726640599284" duration="4269000" />
+    </task>
+    <servers />
+  </component>
+  <component name="TypeScriptGeneratedFilesManager">
+    <option name="version" value="3" />
+  </component>
+  <component name="VcsManagerConfiguration">
+    <MESSAGE value="Target Commit 12/09" />
+    <option name="LAST_COMMIT_MESSAGE" value="Target Commit 12/09" />
+  </component>
 </project>
\ No newline at end of file
Index: .gitIgnore
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>/.env\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/.gitIgnore b/.gitIgnore
--- a/.gitIgnore	
+++ b/.gitIgnore	
@@ -1,1 +1,3 @@
 /.env
+
+persistence.xml
\ No newline at end of file
Index: src/main/resources/META-INF/persistence.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"yes\"?>\r\n<persistence xmlns=\"https://jakarta.ee/xml/ns/persistence\"\r\n             xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\r\n             version=\"3.0\"\r\n             xsi:schemaLocation=\"https://jakarta.ee/xml/ns/persistence https://jakarta.ee/xml/ns/persistence/persistence_3_0.xsd\">\r\n    <persistence-unit name=\"hotelli_db\" transaction-type=\"RESOURCE_LOCAL\">\r\n        <provider>org.hibernate.jpa.HibernatePersistenceProvider</provider>\r\n        <properties>\r\n            <property name=\"jakarta.persistence.jdbc.url\" value=\"jdbc:mariadb://localhost:3306/hotelli_db\"/>\r\n            <property name=\"jakarta.persistence.jdbc.user\" value=\"root\"/>\r\n            <property name=\"jakarta.persistence.jdbc.password\" value=\"root\"/>\r\n            <property name=\"jakarta.persistence.jdbc.driver\" value=\"org.mariadb.jdbc.Driver\"/>\r\n            <property name=\"jakarta.persistence.schema-generation.database.action\" value=\"none\"/>\r\n            <property name=\"jakarta.persistence.sql-dialect\" value=\"org.hibernate.dialect.MariaDBDialect\"/>\r\n            <property name=\"hibernate.show_sql\" value=\"true\" />\r\n        </properties>\r\n    </persistence-unit>\r\n</persistence>
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/main/resources/META-INF/persistence.xml b/src/main/resources/META-INF/persistence.xml
--- a/src/main/resources/META-INF/persistence.xml	
+++ b/src/main/resources/META-INF/persistence.xml	
@@ -8,7 +8,7 @@
         <properties>
             <property name="jakarta.persistence.jdbc.url" value="jdbc:mariadb://localhost:3306/hotelli_db"/>
             <property name="jakarta.persistence.jdbc.user" value="root"/>
-            <property name="jakarta.persistence.jdbc.password" value="root"/>
+            <property name="jakarta.persistence.jdbc.password" value="Suzu"/>
             <property name="jakarta.persistence.jdbc.driver" value="org.mariadb.jdbc.Driver"/>
             <property name="jakarta.persistence.schema-generation.database.action" value="none"/>
             <property name="jakarta.persistence.sql-dialect" value="org.hibernate.dialect.MariaDBDialect"/>
Index: src/main/Database/hotelli_db
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>CREATE DATABASE hotelli_db;\r\nUSE hotelli_db;\r\n\r\n\r\nCREATE TABLE hotelli (\r\n    hotelli_id INT PRIMARY KEY AUTO_INCREMENT,\r\n    kaupunki VARCHAR(100),\r\n    nimi VARCHAR(100),\r\n    osoite VARCHAR(255),\r\n    puh VARCHAR(20),\r\n    maa VARCHAR(50)\r\n);\r\n\r\nCREATE TABLE kayttaja (\r\n    kayttaja_id INT PRIMARY KEY AUTO_INCREMENT,\r\n    etunimi VARCHAR(100),\r\n    sukunimi VARCHAR(100),\r\n    sposti VARCHAR(100) NOT NULL,\r\n    puh VARCHAR(20),\r\n    rooli VARCHAR(50) NOT NULL,\r\n    salasana VARCHAR(255) NOT NULL\r\n);\r\n\r\nCREATE TABLE asiakas (\r\n    asiakas_id INT PRIMARY KEY AUTO_INCREMENT,\r\n    etunimi VARCHAR(100) NOT NULL,\r\n    sukunimi VARCHAR(100) NOT NULL,\r\n    sposti VARCHAR(100) NOT NULL,\r\n    puh VARCHAR(20),\r\n    henkilo_maara INT(5),\r\n    huomio VARCHAR(500)\r\n);\r\n\r\n\r\nCREATE TABLE huone (\r\n    huone_id INT PRIMARY KEY AUTO_INCREMENT,\r\n    huone_nro INT NOT NULL,\r\n    huone_tyyppi VARCHAR(50),\r\n    huone_tila VARCHAR(50),\r\n    huone_hinta DECIMAL(10, 2) NOT NULL,\r\n    hotelli_id INT,\r\n    FOREIGN KEY (hotelli_id) REFERENCES hotelli(hotelli_id)\r\n);\r\n\r\nCREATE TABLE lasku (\r\n    lasku_id INT PRIMARY KEY AUTO_INCREMENT,\r\n    maksu_status VARCHAR(50) NOT NULL,\r\n    varaus_muoto VARCHAR(50) NOT NULL,\r\n    valuutta VARCHAR(20),\r\n    asiakas_id INT,\r\n    FOREIGN KEY (asiakas_id) REFERENCES asiakas(asiakas_id)\r\n);\r\n\r\n\r\nCREATE TABLE huone_varaus (\r\n    varaus_id INT PRIMARY KEY AUTO_INCREMENT,\r\n    huone_maara INT NOT NULL,\r\n    alku_pvm DATE NOT NULL,\r\n    loppu_pvm DATE NOT NULL,\r\n    huone_id INT,\r\n    lasku_id INT,\r\n    FOREIGN KEY (huone_id) REFERENCES huone(huone_id),\r\n    FOREIGN KEY (lasku_id) REFERENCES lasku(lasku_id)\r\n);\r\n\r\n\r\n\r\n//kayttaja, tällä tavalla ei voi lisää hashed salasana, ohjelman kautta (ajja ohjelma) voi.\r\nINSERT INTO `kayttaja` (`etunimi`, `sukunimi`, `sposti`, `puh`, `rooli`, `salasana`)\r\nVALUES ('Milla','Koskiainen', 'milla.koskiainen@hotelli.com', '03762387168', 'admin', 'milla');\r\n\r\nINSERT INTO `kayttaja` (`etunimi`, `sukunimi`, `sposti`, `puh`, `rooli`, `salasana`)\r\nVALUES ('Lisa','Paranen', 'lisa.paranen@hotelli.com', '03762387168', 'normaali', 'lisa');\r\n\r\n//asiakas\r\nINSERT INTO `asiakas` (`etunimi`, `sukunimi`, `sposti`, `puh`, `henkilo_maara`, `huomio`)\r\nVALUES ('Matti', 'Meikäläinen', 'matti@sposti.fi', '09123456', 1, 'ei erikoista');\r\n\r\nINSERT INTO `asiakas` (`etunimi`, `sukunimi`, `sposti`, `puh`, `henkilo_maara`, `huomio`)\r\nVALUES ('Mia', 'Makki', 'mia@sposti.fi', '0923456', 2, 'Rauhallinen huone');\r\n\r\nINSERT INTO `asiakas` (`etunimi`, `sukunimi`, `sposti`, `puh`, `henkilo_maara`, `huomio`)\r\nVALUES ('Niko', 'Niskka', 'nikko@sposti.fi', '06872398', 3, 'ei erikoista');\r\n\r\n//hotelli\r\nINSERT INTO `hotelli` (`kaupunki`, `nimi`, `osoite`, `puh`, `maa`)\r\nVALUES ('Helsinki', 'EkaHoteli', 'parastie 29', '09576345', 'Suomi');\r\n\r\nINSERT INTO `hotelli` (`kaupunki`, `nimi`, `osoite`, `puh`, `maa`)\r\nVALUES ('Espoo', 'TokaHoteli', 'toisentie 89', '0265662', 'Suomi');\r\n\r\n//huone\r\nINSERT INTO `huone` (`huone_nro`, `huone_tyyppi`, `huone_tila`, `huone_hinta`, `hotelli_id`)\r\nVALUES ('101', 'yhden hengen', 'vapaa', '100.00', 1);\r\n\r\nINSERT INTO `huone` (`huone_nro`, `huone_tyyppi`, `huone_tila`, `huone_hinta`, `hotelli_id`)\r\nVALUES ('102', 'kahden hengen', 'varattu', '150.00', 1);\r\n\r\nINSERT INTO `huone` (`huone_nro`, `huone_tyyppi`, `huone_tila`, `huone_hinta`, `hotelli_id`)\r\nVALUES ('202', 'kolmen hengen', 'varattu', '160.00', 1);\r\n\r\nINSERT INTO `huone` (`huone_nro`, `huone_tyyppi`, `huone_tila`, `huone_hinta`, `hotelli_id`)\r\nVALUES ('203', 'perhe', 'varattu', '260.00', 1);\r\n\r\nINSERT INTO `huone` (`huone_nro`, `huone_tyyppi`, `huone_tila`, `huone_hinta`, `hotelli_id`)\r\nVALUES ('204', 'sviitti', 'varattu', '300.00', 1);\r\n\r\n\r\n//Lasku\r\nINSERT INTO `lasku` (`maksu_status`, `varaus_muoto`, `valuutta`, `asiakas_id`)\r\nVALUES ('maksettu', 'all_inslusive', 'EUR', 1);\r\n\r\nINSERT INTO `lasku` (`maksu_status`, `varaus_muoto`, `valuutta`, `asiakas_id`)\r\nVALUES ('maksettu', 'all_inslusive', 'USD', 2);\r\n\r\n\r\n//huone_varaus\r\nINSERT INTO `huone_varaus` (`huone_maara`, `alku_pvm`, `loppu_pvm`, `huone_id`, `lasku_id`)\r\nVALUES (1, '2024-08-12', '2024-08-15', 1, 1);\r\n\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/main/Database/hotelli_db b/src/main/Database/hotelli_db
--- a/src/main/Database/hotelli_db	
+++ b/src/main/Database/hotelli_db	
@@ -1,3 +1,4 @@
+DROP DATABASE IF EXISTS hotelli_db;
 CREATE DATABASE hotelli_db;
 USE hotelli_db;
 
@@ -63,11 +64,28 @@
     FOREIGN KEY (lasku_id) REFERENCES lasku(lasku_id)
 );
 
+CREATE TABLE lasku (
+    lasku_id INT PRIMARY KEY AUTO_INCREMENT,
+    maksu_status VARCHAR(50) NOT NULL,
+    varaus_muoto VARCHAR(50) NOT NULL,
+    valuutta VARCHAR(20)
+);
 
+CREATE TABLE asiakas (
+    asiakas_id INT PRIMARY KEY AUTO_INCREMENT,
+    etunimi VARCHAR(100) NOT NULL,
+    sukunimi VARCHAR(100) NOT NULL,
+    sposti VARCHAR(100) NOT NULL,
+    puh VARCHAR(20),
+    henkilo_maara INT(5),
+    huomio VARCHAR(500),
+    lasku_id INT,
+    FOREIGN KEY (lasku_id) REFERENCES lasku(lasku_id)
+);
 
 //kayttaja, tällä tavalla ei voi lisää hashed salasana, ohjelman kautta (ajja ohjelma) voi.
 INSERT INTO `kayttaja` (`etunimi`, `sukunimi`, `sposti`, `puh`, `rooli`, `salasana`)
-VALUES ('Milla','Koskiainen', 'milla.koskiainen@hotelli.com', '03762387168', 'admin', 'milla');
+VALUES ('Milla','Koskiainen', 'milla.koskiainen@hoteli.com', '03762387168', 'admin', 'milla');
 
 INSERT INTO `kayttaja` (`etunimi`, `sukunimi`, `sposti`, `puh`, `rooli`, `salasana`)
 VALUES ('Lisa','Paranen', 'lisa.paranen@hotelli.com', '03762387168', 'normaali', 'lisa');
Index: .idea/dataSources.local.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><?xml version=\"1.0\" encoding=\"UTF-8\"?>\r\n<project version=\"4\">\r\n  <component name=\"dataSourceStorageLocal\" created-in=\"IU-233.15619.7\">\r\n    <data-source name=\"@localhost\" uuid=\"aa989b5b-8fef-408c-b7b9-47f367b75a5e\">\r\n      <database-info product=\"MariaDB\" version=\"10.11.2-MariaDB\" jdbc-version=\"4.2\" driver-name=\"MariaDB Connector/J\" driver-version=\"3.0.7\" dbms=\"MARIADB\" exact-version=\"10.11.2\" exact-driver-version=\"3.0\">\r\n        <extra-name-characters>#@</extra-name-characters>\r\n        <identifier-quote-string>`</identifier-quote-string>\r\n      </database-info>\r\n      <case-sensitivity plain-identifiers=\"mixed\" quoted-identifiers=\"mixed\" />\r\n      <secret-storage>master_key</secret-storage>\r\n      <user-name>root</user-name>\r\n      <schema-mapping>\r\n        <introspection-scope>\r\n          <node kind=\"schema\">\r\n            <name qname=\"@\" />\r\n            <name qname=\"hotelli_db\" />\r\n          </node>\r\n        </introspection-scope>\r\n      </schema-mapping>\r\n    </data-source>\r\n  </component>\r\n</project>
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/.idea/dataSources.local.xml b/.idea/dataSources.local.xml
--- a/.idea/dataSources.local.xml	
+++ b/.idea/dataSources.local.xml	
@@ -1,6 +1,6 @@
 <?xml version="1.0" encoding="UTF-8"?>
 <project version="4">
-  <component name="dataSourceStorageLocal" created-in="IU-233.15619.7">
+  <component name="dataSourceStorageLocal" created-in="IU-233.13135.103">
     <data-source name="@localhost" uuid="aa989b5b-8fef-408c-b7b9-47f367b75a5e">
       <database-info product="MariaDB" version="10.11.2-MariaDB" jdbc-version="4.2" driver-name="MariaDB Connector/J" driver-version="3.0.7" dbms="MARIADB" exact-version="10.11.2" exact-driver-version="3.0">
         <extra-name-characters>#@</extra-name-characters>
Index: src/main/java/app/HuoneHaku.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package app;\r\n\r\nimport controller.HuoneController;\r\nimport model.enteties.Huone;\r\nimport java.util.Scanner;\r\n\r\npublic class HuoneHaku {\r\n\r\n    private HuoneController controller = new HuoneController();\r\n    private Scanner scanner = new Scanner(System.in);\r\n\r\n    public void start() {\r\n        //Lisää huone ja hae, päivitä, poista\r\n\r\n        while (true) {\r\n            System.out.println(\"Valitse toiminto:\");\r\n            System.out.println(\"1. Lisää uusi huone\");\r\n            System.out.println(\"2. Hae huone_ID:llä\");\r\n            System.out.println(\"3. Hae huoneen tyypillä\");\r\n            System.out.println(\"4. Hae huoneen tilalla\");\r\n            System.out.println(\"5. Päivitä hinta huone_ID:llä\");\r\n            System.out.println(\"6. Päivitä tila huone_ID:llä\");\r\n            System.out.println(\"7. Poista huone\");\r\n            System.out.println(\"8. Lopeta\");\r\n\r\n            int valinta = scanner.nextInt();\r\n            scanner.nextLine(); // Tyhjennä puskuri\r\n\r\n            switch (valinta) {\r\n                case 1:\r\n                    System.out.println(\"Anna huoneen numero:\");\r\n                    int huone_nro = scanner.nextInt();\r\n                    scanner.nextLine();\r\n                    System.out.println(\"Anna huoneen tyyppi:\");\r\n                    String huone_tyyppi = scanner.nextLine();\r\n                    System.out.println(\"Anna huoneen tila:\");\r\n                    String huone_tila = scanner.nextLine();\r\n                    System.out.println(\"Anna huoneen hinta:\");\r\n                    double huone_hinta = scanner.nextDouble();\r\n                    scanner.nextLine();\r\n                    System.out.println(\"Anna hotelli ID:\");\r\n                    int hotelli_id = scanner.nextInt();\r\n                    scanner.nextLine();\r\n\r\n                    controller.lisaaHuone(huone_nro, huone_tyyppi, huone_tila, huone_hinta, hotelli_id);\r\n                    System.out.println(\"Huone lisätty onnistuneesti!\");\r\n                    break;\r\n\r\n                case 2:\r\n                    System.out.println(\"Anna huoneen ID:\");\r\n                    int idHaku = scanner.nextInt();\r\n                    scanner.nextLine();\r\n                    controller.findHuoneById(idHaku);\r\n\r\n                    break;\r\n\r\n                case 3:\r\n                    System.out.println(\"Anna huoneen tyyppi:\");\r\n                    String tyyppiHaku = scanner.nextLine();\r\n                    controller.findHuoneByTyyppi(tyyppiHaku);\r\n                    break;\r\n\r\n                case 4:\r\n                    System.out.println(\"Anna huoneen tila:\");\r\n                    String tilaHaku = scanner.nextLine();\r\n                    controller.findHuoneByTila(tilaHaku);\r\n                    break;\r\n\r\n                case 5:\r\n                    System.out.println(\"Anna huoneen ID:\");\r\n                    int id = scanner.nextInt();\r\n                    scanner.nextLine();\r\n                    System.out.println(\"Anna uusi hinta:\");\r\n                    double uusiHinta = scanner.nextDouble();\r\n                    scanner.nextLine();\r\n                    controller.updateHuoneHintaById(id, uusiHinta);\r\n                    break;\r\n\r\n                case 6:\r\n                    System.out.println(\"Anna huoneen ID:\");\r\n                    int id2 = scanner.nextInt();\r\n                    scanner.nextLine();\r\n                    System.out.println(\"Anna uusi tila:\");\r\n                    String uusiTila = scanner.nextLine();\r\n                    controller.updateHuoneTilaById(id2, uusiTila);\r\n                    break;\r\n\r\n                case 7:\r\n                    System.out.println(\"Anna poistettavan huoneen ID:\");\r\n                    int id3 = scanner.nextInt();\r\n                    scanner.nextLine();\r\n                    controller.deleteHuone(id3);\r\n                    break;\r\n\r\n                case 8:\r\n                    System.out.println(\"Ohjelma lopetetaan.\");\r\n                    return;\r\n            }\r\n        }\r\n    }\r\n\r\n\r\n            /*\r\n\r\n            if (valinta == 8) {\r\n                break;\r\n            } else if (valinta == 1) {\r\n                System.out.println(\"Anna huoneen numero:\");\r\n                int huone_nro = scanner.nextInt();\r\n                scanner.nextLine();\r\n                System.out.println(\"Anna huoneen tyyppi:\");\r\n                String huone_tyyppi = scanner.nextLine();\r\n                System.out.println(\"Anna huoneen tila:\");\r\n                String huone_tila = scanner.nextLine();\r\n                System.out.println(\"Anna huoneen hinta:\");\r\n                double huone_hinta = scanner.nextDouble();\r\n                scanner.nextLine();\r\n                System.out.println(\"Anna hotelli ID:\");\r\n                int hotelli_id = scanner.nextInt();\r\n                scanner.nextLine();\r\n\r\n                controller.lisaaHuone(huone_nro, huone_tyyppi, huone_tila, huone_hinta, hotelli_id);\r\n\r\n            } else if (valinta == 2) {\r\n                System.out.println(\"Anna huoneen ID:\");\r\n                int idHaku = scanner.nextInt();\r\n                scanner.nextLine();\r\n                Huone huone = controller.findHuoneById(idHaku);\r\n                if (huone != null) {\r\n                    printHuone(huone);\r\n                } else {\r\n                    System.out.println(\"Huonetta ei löytynyt ID:llä \" + idHaku);\r\n                }\r\n            } else if (valinta == 3) {\r\n                System.out.println(\"Anna huoneen tyyppi:\");\r\n                String tyyppiHaku = scanner.nextLine();\r\n                Huone huone = controller.findHuoneByTyyppi(tyyppiHaku);\r\n                if (huone != null) {\r\n                    printHuone(huone);\r\n                } else {\r\n                    System.out.println(\"Huonetta ei löytynyt tyypillä \" + tyyppiHaku);\r\n                }\r\n            } else if (valinta == 4) {\r\n                System.out.println(\"Anna huoneen tila:\");\r\n                String tilaHaku = scanner.nextLine();\r\n                Huone huone = controller.findHuoneByTila(tilaHaku);\r\n                if (huone != null) {\r\n                    printHuone(huone);\r\n                } else {\r\n                    System.out.println(\"Huonetta ei löytynyt tilalla \" + tilaHaku);\r\n                }\r\n            } else if (valinta == 5) {\r\n                System.out.println(\"Anna huoneen ID:\");\r\n                int id = scanner.nextInt();\r\n                scanner.nextLine();\r\n                System.out.println(\"Anna uusi hinta:\");\r\n                double uusiHinta = scanner.nextDouble();\r\n                scanner.nextLine();\r\n                controller.updateHuoneHintaById(id, uusiHinta);\r\n            } else if (valinta == 6) {\r\n                System.out.println(\"Anna huoneen ID:\");\r\n                int id = scanner.nextInt();\r\n                scanner.nextLine();\r\n                System.out.println(\"Anna uusi tila:\");\r\n                String uusiTila = scanner.nextLine();\r\n                controller.updateHuoneTilaById(id, uusiTila);\r\n            } else if (valinta == 7) {\r\n                System.out.println(\"Anna poistettavan huoneen ID:\");\r\n                int id = scanner.nextInt();\r\n                scanner.nextLine();\r\n                controller.deleteHuone(id);\r\n            } else {\r\n                System.out.println(\"Virheellinen valinta!\");\r\n            }\r\n        }\r\n    }\r\n\r\n             */\r\n\r\n    public void printHuone(Huone huone) {\r\n        System.out.println(\"Huoneen numero: \" + huone.getHuone_nro());\r\n        System.out.println(\"Huoneen tyyppi: \" + huone.getHuone_tyyppi());\r\n        System.out.println(\"Huoneen tila: \" + huone.getHuone_tila());\r\n        System.out.println(\"Huoneen hinta: \" + huone.getHuone_hinta());\r\n        System.out.println(\"Hotelli ID: \" + huone.getHotelli_id());\r\n    }\r\n}\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/main/java/app/HuoneHaku.java b/src/main/java/app/HuoneHaku.java
--- a/src/main/java/app/HuoneHaku.java	
+++ b/src/main/java/app/HuoneHaku.java	
@@ -73,7 +73,7 @@
                     System.out.println("Anna uusi hinta:");
                     double uusiHinta = scanner.nextDouble();
                     scanner.nextLine();
-                    controller.updateHuoneHintaById(id, uusiHinta);
+                    //controller.updateHuoneById(id, uusiHinta);
                     break;
 
                 case 6:
@@ -82,7 +82,7 @@
                     scanner.nextLine();
                     System.out.println("Anna uusi tila:");
                     String uusiTila = scanner.nextLine();
-                    controller.updateHuoneTilaById(id2, uusiTila);
+                    //controller.updateHuoneTilaById(id2, uusiTila);
                     break;
 
                 case 7:
Index: src/main/java/app/MockData.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package app;\r\n\r\nimport model.enteties.Asiakas;\r\nimport model.enteties.Huone;\r\nimport model.enteties.Varaus;\r\n\r\nimport java.util.ArrayList;\r\nimport java.util.List;\r\n\r\n\r\npublic class MockData {\r\n\r\n    private static List<Varaus> mockReservations = new ArrayList<>();\r\n    private static List<Huone> rooms = new ArrayList<>();\r\n    private static List<Asiakas> customers = new ArrayList<>();\r\n\r\n    public static List<Varaus> getMockReservations() {\r\n        return mockReservations;\r\n    }\r\n\r\n    public static void addReservation(Varaus varaus) {\r\n        mockReservations.add(varaus);\r\n    }\r\n\r\n\r\n    public static List<Asiakas> getMockUsers() {\r\n        customers.add(new Asiakas(\"John\", \"Doe\", \"0401234567\", \"example@sähköposti.com\"));\r\n        customers.add(new Asiakas(\"Jane\", \"Doe\", \"0401234567\", \"example@sähköposti.com\"));\r\n        customers.add(new Asiakas(\"John\", \"Smith\", \"0401234567\", \"example@sähköposti.com\"));\r\n        customers.add(new Asiakas(\"Jane\", \"Smith\", \"0401234567\", \"example@sähköposti.com\"));\r\n        return customers;\r\n    }\r\n\r\n    public static void addAsiakas(Asiakas asiakas) {\r\n        customers.add(asiakas);\r\n    }\r\n\r\n    public static List<Huone> getMockRooms() {\r\n        rooms.add(new Huone(101, 100.0, \"Standard\"));\r\n        rooms.add(new Huone(102, 200.0, \"Suite\"));\r\n        rooms.add(new Huone(103, 200.0, \"Suite\"));\r\n        rooms.add(new Huone(104, 100.0, \"Standard\"));\r\n        rooms.add(new Huone(105, 200.0, \"Suite\"));\r\n        rooms.add(new Huone(106, 100.0, \"Standard\"));\r\n        return rooms;\r\n    }\r\n\r\n    public static void addHuone(Huone huone) {\r\n        rooms.add(huone);\r\n    }\r\n\r\n    public static void removeHuone(Huone huone) {\r\n        rooms.remove(huone);\r\n    }\r\n}
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/main/java/app/MockData.java b/src/main/java/app/MockData.java
--- a/src/main/java/app/MockData.java	
+++ b/src/main/java/app/MockData.java	
@@ -7,6 +7,7 @@
 import java.util.ArrayList;
 import java.util.List;
 
+/*
 
 public class MockData {
 
@@ -52,4 +53,6 @@
     public static void removeHuone(Huone huone) {
         rooms.remove(huone);
     }
-}
\ No newline at end of file
+}
+
+ */
\ No newline at end of file
Index: src/target/classes/META-INF/persistence.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"yes\"?>\r\n<persistence xmlns=\"https://jakarta.ee/xml/ns/persistence\"\r\n             xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\r\n             version=\"3.0\"\r\n             xsi:schemaLocation=\"https://jakarta.ee/xml/ns/persistence https://jakarta.ee/xml/ns/persistence/persistence_3_0.xsd\">\r\n    <persistence-unit name=\"hotelli_db\" transaction-type=\"RESOURCE_LOCAL\">\r\n        <provider>org.hibernate.jpa.HibernatePersistenceProvider</provider>\r\n        <properties>\r\n            <property name=\"jakarta.persistence.jdbc.url\" value=\"jdbc:mariadb://localhost:3306/hotelli_db\"/>\r\n            <property name=\"jakarta.persistence.jdbc.user\" value=\"root\"/>\r\n            <property name=\"jakarta.persistence.jdbc.password\" value=\"root\"/>\r\n            <property name=\"jakarta.persistence.jdbc.driver\" value=\"org.mariadb.jdbc.Driver\"/>\r\n            <property name=\"jakarta.persistence.schema-generation.database.action\" value=\"none\"/>\r\n            <property name=\"jakarta.persistence.sql-dialect\" value=\"org.hibernate.dialect.MariaDBDialect\"/>\r\n            <property name=\"hibernate.show_sql\" value=\"true\" />\r\n        </properties>\r\n    </persistence-unit>\r\n</persistence>
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/target/classes/META-INF/persistence.xml b/src/target/classes/META-INF/persistence.xml
--- a/src/target/classes/META-INF/persistence.xml	
+++ b/src/target/classes/META-INF/persistence.xml	
@@ -8,7 +8,7 @@
         <properties>
             <property name="jakarta.persistence.jdbc.url" value="jdbc:mariadb://localhost:3306/hotelli_db"/>
             <property name="jakarta.persistence.jdbc.user" value="root"/>
-            <property name="jakarta.persistence.jdbc.password" value="root"/>
+            <property name="jakarta.persistence.jdbc.password" value="Suzu"/>
             <property name="jakarta.persistence.jdbc.driver" value="org.mariadb.jdbc.Driver"/>
             <property name="jakarta.persistence.schema-generation.database.action" value="none"/>
             <property name="jakarta.persistence.sql-dialect" value="org.hibernate.dialect.MariaDBDialect"/>
Index: src/main/java/model/DAO/HuoneDAO.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package model.DAO;\r\n\r\nimport jakarta.persistence.EntityManager;\r\nimport model.datasourse.MariaDbConnection;\r\nimport model.enteties.Huone;\r\nimport java.util.List;\r\n\r\npublic class HuoneDAO {\r\n\r\n    public void persist(Huone huone) {\r\n        EntityManager em = MariaDbConnection.getInstance();\r\n        em.getTransaction().begin();\r\n        em.persist(huone);\r\n        em.getTransaction().commit();\r\n    }\r\n\r\n    public Huone haeHuoneetByHotelliId(int hotelli_id) {\r\n        EntityManager em = MariaDbConnection.getInstance();\r\n        List<Huone> huoneet = null;\r\n        Huone palautettavaHuone = null;\r\n        try {\r\n            huoneet = em.createQuery(\"SELECT h FROM Huone h WHERE h.hotelli_id = :hotelli_id\", Huone.class)\r\n                    .setParameter(\"hotelli_id\", hotelli_id)\r\n                    .getResultList();\r\n            if (!huoneet.isEmpty()) {\r\n                // Palautetaan ensimmäinen huone\r\n                palautettavaHuone = huoneet.get(0);\r\n            } else {\r\n                System.out.println(\"Huoneita ei löytynyt hotellista ID:llä \" + hotelli_id);\r\n            }\r\n            // Tulostetaan kaikki huoneet\r\n            for (Huone huone : huoneet) {\r\n                printHuone(huone);\r\n            }\r\n\r\n        } finally {\r\n            if (em != null) {\r\n                em.close();\r\n            }\r\n        }\r\n        return palautettavaHuone;\r\n    }\r\n\r\n    public Huone findByRoomId(int id) {\r\n        EntityManager em = MariaDbConnection.getInstance();\r\n        try {\r\n            Huone huone = em.find(Huone.class, id);\r\n            printHuone(huone);\r\n            return huone;\r\n        } finally {\r\n            if (em != null) {\r\n                em.close();\r\n            }\r\n        }\r\n    }\r\n\r\n\r\n    public Huone findByHuoneTila(String huone_tila) {\r\n        EntityManager em = MariaDbConnection.getInstance();\r\n        List<Huone> huoneet = null;\r\n        try {\r\n            huoneet = em.createQuery(\"SELECT h FROM Huone h WHERE h.huone_tila = :huone_tila\", Huone.class)\r\n                    .setParameter(\"huone_tila\", huone_tila)\r\n                    .getResultList();\r\n            for (Huone huone : huoneet) {\r\n                printHuone(huone);\r\n                return huone;\r\n            }\r\n        } finally {\r\n            if (em != null) {\r\n                em.close();\r\n            }\r\n        }\r\n        return null;\r\n    }\r\n\r\n    public Huone findByTyyppi(String huone_tyyppi) {\r\n        EntityManager em = MariaDbConnection.getInstance();\r\n        List<Huone> huoneet = null;\r\n        try {\r\n            huoneet = em.createQuery(\"SELECT h FROM Huone h WHERE h.huone_tyyppi = :huone_tyyppi\", Huone.class)\r\n                    .setParameter(\"huone_tyyppi\", huone_tyyppi)\r\n                    .getResultList();\r\n            for (Huone huone : huoneet) {\r\n                printHuone(huone);\r\n            }\r\n        } finally {\r\n            if (em != null) {\r\n                em.close();\r\n            }\r\n        }\r\n        return null;\r\n    }\r\n\r\n    public void updateHuoneById(int id, int huone_nro, String huone_tyyppi, String huone_tila, double huone_hinta) {\r\n        EntityManager em = MariaDbConnection.getInstance();\r\n        try {\r\n            em.getTransaction().begin();\r\n            Huone huone = em.find(Huone.class, id);\r\n            if (huone != null) {\r\n                huone.setHuone_nro(huone_nro);\r\n                huone.setHuone_tyyppi(huone_tyyppi);\r\n                huone.setHuone_tila(huone_tila);\r\n                huone.setHuone_hinta(huone_hinta);\r\n            }\r\n            em.getTransaction().commit();\r\n        } finally {\r\n            if (em != null) {\r\n                em.close();\r\n            }\r\n        }\r\n\r\n    }\r\n\r\n\r\n    public void removeById(int huone_id) {\r\n        EntityManager em = MariaDbConnection.getInstance();\r\n        try {\r\n            em.getTransaction().begin();\r\n            Huone huone = em.find(Huone.class, huone_id);\r\n            if (huone != null) {\r\n                em.remove(huone);\r\n            }\r\n            em.getTransaction().commit();\r\n        } finally {\r\n            if (em != null) {\r\n                em.close();\r\n            }\r\n        }\r\n    }\r\n    public void printHuone(Huone huone) {\r\n        System.out.println(\"Huoneen numero: \" + huone.getHuone_nro());\r\n        System.out.println(\"Huoneen tyyppi: \" + huone.getHuone_tyyppi());\r\n        System.out.println(\"Huoneen tila: \" + huone.getHuone_tila());\r\n        System.out.println(\"Huoneen hinta: \" + huone.getHuone_hinta());\r\n        System.out.println(\"Hotelli ID: \" + huone.getHotelli_id());\r\n        System.out.println(\" \");\r\n    }\r\n\r\n}\r\n\r\n\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/main/java/model/DAO/HuoneDAO.java b/src/main/java/model/DAO/HuoneDAO.java
--- a/src/main/java/model/DAO/HuoneDAO.java	
+++ b/src/main/java/model/DAO/HuoneDAO.java	
@@ -14,17 +14,15 @@
         em.getTransaction().commit();
     }
 
-    public Huone haeHuoneetByHotelliId(int hotelli_id) {
+    public List<Huone> haeHuoneetByHotelliId(int hotelli_id) {
         EntityManager em = MariaDbConnection.getInstance();
         List<Huone> huoneet = null;
-        Huone palautettavaHuone = null;
         try {
             huoneet = em.createQuery("SELECT h FROM Huone h WHERE h.hotelli_id = :hotelli_id", Huone.class)
                     .setParameter("hotelli_id", hotelli_id)
                     .getResultList();
             if (!huoneet.isEmpty()) {
-                // Palautetaan ensimmäinen huone
-                palautettavaHuone = huoneet.get(0);
+                System.out.println("Huoneet löytyivät hotellista ID:llä " + hotelli_id);
             } else {
                 System.out.println("Huoneita ei löytynyt hotellista ID:llä " + hotelli_id);
             }
@@ -38,7 +36,7 @@
                 em.close();
             }
         }
-        return palautettavaHuone;
+        return huoneet;
     }
 
     public Huone findByRoomId(int id) {
