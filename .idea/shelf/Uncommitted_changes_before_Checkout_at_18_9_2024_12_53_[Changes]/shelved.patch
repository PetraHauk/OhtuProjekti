Index: src/main/java/app/OhjelmistoGUI.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package app;\r\n\r\nimport javafx.application.Application;\r\nimport javafx.geometry.Pos;\r\nimport javafx.scene.Scene;\r\nimport javafx.scene.control.*;\r\nimport javafx.scene.control.cell.PropertyValueFactory;\r\nimport javafx.scene.layout.*;\r\nimport javafx.stage.Stage;\r\nimport javafx.scene.control.ComboBox;\r\n\r\nimport model.DAO.HuoneDAO;\r\nimport model.DAO.AsiakasDAO;\r\nimport model.enteties.Huone;\r\nimport model.enteties.Asiakas;\r\n\r\npublic class OhjelmistoGUI extends Application {\r\n\r\n    @Override\r\n    public void start(Stage primaryStage) {\r\n        primaryStage.setTitle(\"Hotel Management System\");\r\n\r\n        HBox mainLayout = new HBox(10);\r\n        VBox leftBar = createLeftBar(mainLayout, primaryStage);\r\n        mainLayout.getChildren().addAll(leftBar, createEtusivu());\r\n\r\n        Scene scene = new Scene(mainLayout, 900, 600);\r\n        scene.getStylesheets().add(\"style.css\");\r\n        primaryStage.setScene(scene);\r\n        primaryStage.show();\r\n    }\r\n\r\n\r\n    // Creates the left bar with buttons and user info\r\n    private VBox createLeftBar(HBox mainLayout, Stage primaryStage) {\r\n        Label loggedInUsername = new Label(\"Username\");\r\n        Label loggedInImage = new Label(\"[IMAGE]\");\r\n        HBox userBox = new HBox(10);\r\n        userBox.getStyleClass().add(\"user-box\");\r\n        userBox.getChildren().addAll(loggedInImage, loggedInUsername);\r\n\r\n        Button frontPageButton = createStyledButton(\"Etusivu\");\r\n        Button showRoomsButton = createStyledButton(\"Huoneiden hallinta\");\r\n        Button showCustomersButton = createStyledButton(\"Asiakasrekisteri\");\r\n        Button checkInButton = createStyledButton(\"Check-In\");\r\n        Button checkOutButton = createStyledButton(\"Check-Out\");\r\n\r\n        VBox leftButtons = new VBox(10);\r\n        leftButtons.getChildren().addAll(frontPageButton, showRoomsButton, showCustomersButton, checkInButton, checkOutButton);\r\n        leftButtons.getStyleClass().add(\"left-buttons\");\r\n\r\n        Button logoutButton = new Button(\"Kirjaudu ulos\");\r\n        logoutButton.setPrefWidth(200);\r\n        logoutButton.getStyleClass().add(\"button-log-out\");\r\n\r\n        VBox leftBar = new VBox(30);\r\n        leftBar.getChildren().addAll(userBox, leftButtons, logoutButton);\r\n        leftBar.getStyleClass().add(\"left-bar\");\r\n\r\n        frontPageButton.setOnAction(e -> handleFrontPageButtonAction(mainLayout, leftBar));\r\n        showRoomsButton.setOnAction(e -> handleShowRoomsButtonAction(mainLayout, leftBar));\r\n        showCustomersButton.setOnAction(e -> handleShowCustomersButtonAction(mainLayout, leftBar));\r\n        checkInButton.setOnAction(e -> handleCheckInButtonAction(mainLayout, leftBar));\r\n        checkOutButton.setOnAction(e -> handleCheckOutButtonAction(mainLayout, leftBar));\r\n        logoutButton.setOnAction(e -> handleLogoutButtonAction(primaryStage));\r\n\r\n        return leftBar;\r\n    }\r\n\r\n\r\n    // Creates the content for etusivu\r\n    private VBox createEtusivu() {\r\n        VBox etusivuInfo = new VBox(10);\r\n        etusivuInfo.getStyleClass().add(\"info\");\r\n        Label etusivuOtsikkoLabel = new Label(\"Etusivu\");\r\n        etusivuOtsikkoLabel.getStyleClass().add(\"otsikko\");\r\n        Label etusivuKuvausLabel = new Label(\"Täältä voit hallita hotellin huoneita ja asiakkaita sekä tehdä check-in ja check-out toimintoja.\");\r\n        etusivuKuvausLabel.setWrapText(true);\r\n        etusivuKuvausLabel.setMaxWidth(400);\r\n        etusivuInfo.getChildren().addAll(etusivuOtsikkoLabel, etusivuKuvausLabel);\r\n        return etusivuInfo;\r\n    }\r\n\r\n    // Creates the content for huoneet\r\n    private VBox createHuoneet() {\r\n        VBox huoneetInfo = new VBox(10);\r\n        huoneetInfo.getStyleClass().add(\"info\");\r\n        Label huoneetOtsikkoLabel = new Label(\"Huoneet\");\r\n        huoneetOtsikkoLabel.getStyleClass().add(\"otsikko\");\r\n        TableView<Huone> roomTable = createRoomTable();\r\n        huoneetInfo.getChildren().addAll(huoneetOtsikkoLabel, roomTable);\r\n        return huoneetInfo;\r\n    }\r\n\r\n    // Creates the content for asiakkaat\r\n    private VBox createAsiakkaat() {\r\n        VBox asiakkaatInfo = new VBox(10);\r\n        asiakkaatInfo.getStyleClass().add(\"info\");\r\n        Label asiakkaatOtsikkoLabel = new Label(\"Asiakkaat\");\r\n        asiakkaatOtsikkoLabel.getStyleClass().add(\"otsikko\");\r\n        TableView<Asiakas> customerTable = createCustomerTable();\r\n        asiakkaatInfo.getChildren().addAll(asiakkaatOtsikkoLabel, customerTable);\r\n        return asiakkaatInfo;\r\n    }\r\n\r\n    // Creates the content for check-in\r\n    private VBox createCheckIn() {\r\n        VBox huoneVarausInfo = new VBox(5);\r\n        huoneVarausInfo.getStyleClass().add(\"info\");\r\n\r\n        // otsikko\r\n        Label checkInInfoLabel = new Label(\"Check-In\");\r\n        checkInInfoLabel.getStyleClass().add(\"otsikko\");\r\n\r\n        // huone tyyppi\r\n        VBox huoneTyyppi = new VBox(0);\r\n        Label huoneLabel = new Label(\"Huoneen tyyppi:\");\r\n        ComboBox<String> huoneField = new ComboBox<>();\r\n        huoneField.getItems().addAll(\r\n                \"Yhden hengen huone\",\r\n                \"Kahden hengen huone\",\r\n                \"Kolmen hengen huone\",\r\n                \"Perhehuone\",\r\n                \"Sviitti\"\r\n        );\r\n        huoneField.setPromptText(\"Valitse huonetyyppi...\");\r\n        huoneTyyppi.getChildren().addAll(huoneLabel, huoneField);\r\n\r\n        // tulo päivä\r\n        VBox tuloPaiva = new VBox(0);\r\n        Label tuloLabel = new Label(\"Saapumispäivä:\");\r\n        DatePicker tuloDatePicker = new DatePicker();\r\n        tuloPaiva.getChildren().addAll(tuloLabel, tuloDatePicker);\r\n\r\n        // poistumis päivä\r\n        VBox poistumisPaiva = new VBox(0);\r\n        Label poistumisLabel = new Label(\"Lähtöpäivä:\");\r\n        DatePicker poistumisDatePicker = new DatePicker();\r\n        poistumisPaiva.getChildren().addAll(poistumisLabel, poistumisDatePicker);\r\n\r\n        // päivät\r\n        VBox paivat = new VBox(0);\r\n        Label paivatLabel = new Label(\"Päivät:\");\r\n        Label paivatValue = new Label(\"0\");\r\n        paivat.getChildren().addAll(paivatLabel, paivatValue);\r\n\r\n        // huoneen hinta\r\n        VBox huoneHinta = new VBox(0);\r\n        Label hintaLabel = new Label(\"Huoneen hinta:\");\r\n        Label hinta = new Label(\"0.00 €\");\r\n        huoneHinta.getChildren().addAll(hintaLabel, hinta);\r\n\r\n        // table showing available rooms\r\n        VBox availableRooms = new VBox(10);\r\n        Label availableRoomsTitle = new Label(\"Vapaat huoneet:\");\r\n        availableRoomsTitle.getStyleClass().add(\"otsikko\");\r\n        TableView<Huone> huoneTable = createRoomTable();\r\n        availableRooms.getChildren().addAll(availableRoomsTitle, huoneTable);\r\n\r\n        huoneVarausInfo.getChildren().addAll(checkInInfoLabel, huoneTyyppi, tuloPaiva, poistumisPaiva, paivat, huoneHinta);\r\n        HBox huoneTiedot = new HBox(10);\r\n        huoneTiedot.getChildren().addAll(huoneVarausInfo, availableRooms);\r\n\r\n        VBox checkIn = new VBox(10);\r\n        checkIn.getChildren().addAll(huoneTiedot);\r\n        return checkIn;\r\n    }\r\n\r\n    // Creates the content for check-out\r\n    private VBox createCheckOut() {\r\n        VBox checkOutInfo = new VBox(10);\r\n        checkOutInfo.getStyleClass().add(\"info\");\r\n        Label checkOutInfoLabel = new Label(\"Check-Out\");\r\n        checkOutInfoLabel.getStyleClass().add(\"otsikko\");\r\n        checkOutInfo.getChildren().add(checkOutInfoLabel);\r\n        return checkOutInfo;\r\n    }\r\n\r\n    // Creates a button with custom styling\r\n    private Button createStyledButton(String text) {\r\n        Button button = new Button(text);\r\n        button.setPrefWidth(200);\r\n        button.setAlignment(Pos.CENTER_LEFT);\r\n        button.getStyleClass().add(\"button-front-page\");\r\n        return button;\r\n    }\r\n\r\n    // Updates the main layout with new content\r\n    private void updateMainLayout(HBox mainLayout, VBox leftBar, VBox info) {\r\n        mainLayout.getChildren().clear();\r\n        mainLayout.getChildren().addAll(leftBar, info);\r\n    }\r\n\r\n    // Method to create the Room table view\r\n    private TableView<Huone> createRoomTable() {\r\n        TableView<Huone> roomTable = new TableView<>();\r\n\r\n        TableColumn<Huone, Integer> idColumn = new TableColumn<>(\"Huone ID\");\r\n        idColumn.setCellValueFactory(new PropertyValueFactory<>(\"huoneId\"));\r\n\r\n        TableColumn<Huone, Integer> numberColumn = new TableColumn<>(\"Huoneen Numero\");\r\n        numberColumn.setCellValueFactory(new PropertyValueFactory<>(\"huoneNro\"));\r\n\r\n        TableColumn<Huone, String> typeColumn = new TableColumn<>(\"Tyyppi\");\r\n        typeColumn.setCellValueFactory(new PropertyValueFactory<>(\"huoneTyyppi\"));\r\n\r\n        TableColumn<Huone, String> statusColumn = new TableColumn<>(\"Status\");\r\n        statusColumn.setCellValueFactory(new PropertyValueFactory<>(\"huoneTila\"));\r\n\r\n        TableColumn<Huone, Double> priceColumn = new TableColumn<>(\"Hinta/Yö\");\r\n        priceColumn.setCellValueFactory(new PropertyValueFactory<>(\"huoneHinta\"));\r\n\r\n        roomTable.getColumns().add(idColumn);\r\n        roomTable.getColumns().add(numberColumn);\r\n        roomTable.getColumns().add(typeColumn);\r\n        roomTable.getColumns().add(statusColumn);\r\n        roomTable.getColumns().add(priceColumn);\r\n\r\n        return roomTable;\r\n    }\r\n\r\n    // Method to create the Customer table view\r\n    private TableView<Asiakas> createCustomerTable() {\r\n        TableView<Asiakas> customerTable = new TableView<>();\r\n\r\n        TableColumn<Asiakas, Integer> idColumn = new TableColumn<>(\"Asiakas ID\");\r\n        idColumn.setCellValueFactory(new PropertyValueFactory<>(\"asiakasId\"));\r\n\r\n        TableColumn<Asiakas, String> firstNameColumn = new TableColumn<>(\"Etunimi\");\r\n        firstNameColumn.setCellValueFactory(new PropertyValueFactory<>(\"etunimi\"));\r\n\r\n        TableColumn<Asiakas, String> lastNameColumn = new TableColumn<>(\"Sukunimi\");\r\n        lastNameColumn.setCellValueFactory(new PropertyValueFactory<>(\"sukunimi\"));\r\n\r\n        TableColumn<Asiakas, String> emailColumn = new TableColumn<>(\"Sähköposti\");\r\n        emailColumn.setCellValueFactory(new PropertyValueFactory<>(\"sposti\"));\r\n\r\n        TableColumn<Asiakas, String> phoneColumn = new TableColumn<>(\"Puhelin\");\r\n        phoneColumn.setCellValueFactory(new PropertyValueFactory<>(\"puh\"));\r\n\r\n        customerTable.getColumns().add(idColumn);\r\n        customerTable.getColumns().add(firstNameColumn);\r\n        customerTable.getColumns().add(lastNameColumn);\r\n        customerTable.getColumns().add(emailColumn);\r\n        customerTable.getColumns().add(phoneColumn);\r\n\r\n        return customerTable;\r\n    }\r\n\r\n    // Button Actions\r\n    private void handleFrontPageButtonAction(HBox mainLayout, VBox leftBar) {\r\n        updateMainLayout(mainLayout, leftBar, createEtusivu());\r\n    }\r\n\r\n    private void handleShowRoomsButtonAction(HBox mainLayout, VBox leftBar) {\r\n        updateMainLayout(mainLayout, leftBar, createHuoneet());\r\n    }\r\n\r\n    private void handleShowCustomersButtonAction(HBox mainLayout, VBox leftBar) {\r\n        updateMainLayout(mainLayout, leftBar, createAsiakkaat());\r\n    }\r\n\r\n    private void handleCheckInButtonAction(HBox mainLayout, VBox leftBar) {\r\n        updateMainLayout(mainLayout, leftBar, createCheckIn());\r\n    }\r\n\r\n    private void handleCheckOutButtonAction(HBox mainLayout, VBox leftBar) {\r\n        updateMainLayout(mainLayout, leftBar, createCheckOut());\r\n    }\r\n\r\n    private void handleLogoutButtonAction(Stage primaryStage) {\r\n        primaryStage.close();\r\n    }\r\n\r\n    public static void main(String[] args) {\r\n        launch(args);\r\n    }\r\n}\r\n
===================================================================
diff --git a/src/main/java/app/OhjelmistoGUI.java b/src/main/java/app/OhjelmistoGUI.java
--- a/src/main/java/app/OhjelmistoGUI.java	
+++ b/src/main/java/app/OhjelmistoGUI.java	
@@ -1,5 +1,6 @@
 package app;
 
+import controller.HuoneController;
 import javafx.application.Application;
 import javafx.geometry.Pos;
 import javafx.scene.Scene;
@@ -16,16 +17,22 @@
 
 public class OhjelmistoGUI extends Application {
 
+    private HuoneController huoneController;
+
     @Override
     public void start(Stage primaryStage) {
         primaryStage.setTitle("Hotel Management System");
 
+        huoneController = new HuoneController();
+
+
+
         HBox mainLayout = new HBox(10);
         VBox leftBar = createLeftBar(mainLayout, primaryStage);
         mainLayout.getChildren().addAll(leftBar, createEtusivu());
 
         Scene scene = new Scene(mainLayout, 900, 600);
-        scene.getStylesheets().add("style.css");
+        scene.getStylesheets().add("/style.css");
         primaryStage.setScene(scene);
         primaryStage.show();
     }
