package controller;

import model.DAO.KayttajaDAO;
import model.enteties.Kayttaja;
import org.mindrot.jbcrypt.BCrypt;
//import org.springframework.security.crypto.bcrypt.BCryptPasswordEncoder;

public class KayttajaController {
    private KayttajaDAO kayttajaDAO;
    // Use BCrypt to hash passwords


    public KayttajaController() {
        kayttajaDAO = new KayttajaDAO();
    }

    // Method to add a new user
    public void lisaaKayttaja(String etunimi, String sukunimi, String sposti, String puh, String rooli, String salasana) {
        // Hash the password using BCrypt
        String hashattuSalasana = BCrypt.hashpw(salasana, BCrypt.gensalt());

        Kayttaja kayttaja = new Kayttaja(0, etunimi, sukunimi, sposti, puh, rooli, hashattuSalasana);// kayttajaId is set to 0, as it should be auto-generated by the DB
        kayttajaDAO.persist(kayttaja);
    }

    // Method to find a user by ID
    public Kayttaja haeKayttajaById(int id) {
        return kayttajaDAO.findById(id);
    }

    public String haeSalasanaSpostilla(String sposti) {
        return kayttajaDAO.findPasswordByEmail(sposti);
    }

    // Method to update a user by ID
    public void paivitaKayttaja(int id, String sposti) {
        kayttajaDAO.updateEmailById(id, sposti);
    }


    // Method to change a user's password by email
    public void vaihdaSalasanaPostilla(String sposti, String newPassword) {
        kayttajaDAO.changePasswordByEmail(sposti, newPassword);
    }

    // Method to delete a user by ID
    public void poistaKayttaja(int id) {
        kayttajaDAO.removeById(id);
    }
}
